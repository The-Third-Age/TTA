# Remove this line to have the validator check for strings in localisation
# Audax Validator "!" Ignore_1004

# Alliance of Dwarves and Men: {
#	110000 - 110199 }

# Alliance of Dwarves and Men Main Menu - 0 options
country_event = {
	id = 110000
	title = "  Alliance of Dwarves and Men"
	desc = "EVTDESC110000"
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		end_color_loc = {}
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
		clr_country_flag = alliance_dwarves_men_selected_country
		clr_country_flag = alliance_dwarves_men_voting_initiator
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
	}
	
	option = {
		name = "§RExit§!"
		
		FOR = { country_event = 402001 } # Dynamic Loc Cleanup
	}
}

# Alliance of Dwarves and Men Main Menu - 1 option
country_event = {
	id = 110001
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Main Menu - 2 options
country_event = {
	id = 110002
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_4"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Main Menu - 3 options
country_event = {
	id = 110003
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_5"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Main Menu - 4 options
country_event = {
	id = 110004
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_6"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Main Menu - 5 options
country_event = {
	id = 110005
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_7"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Main Menu - 6 options
country_event = {
	id = 110006
	title = "  Alliance of Dwarves and Men"
	desc = ""
	picture = "organizations/alliance_dwarves_men_8"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		maroon_color_loc = {}
		dynamic_loc_slot_3 = {}
		dynamic_loc_slot_4 = {}
		dynamic_loc_slot_5 = {}
		dynamic_loc_slot_6 = {}
		dynamic_loc_slot_7 = {}
		dynamic_loc_slot_8 = {}
		dynamic_loc_slot_9 = {}
		end_color_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } } }
			empty_line_loc = {}
			call_to_arms_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } } }
			empty_line_loc = {}
			core_dispute_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } } }
			empty_line_loc = {}
			invite_realm_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } } }
			empty_line_loc = {}
			expand_culture_reach_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } } }
			empty_line_loc = {}
			specific_flavor_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } } }
			empty_line_loc = {}
			economic_union_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } } } }
			empty_line_loc = {}
			political_union_loc = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 3.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 4.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 4.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 5.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_vassal = no # There shouldn't be any. But just in case
								NOT = { tag = THIS }
							}
							create_alliance = THIS
							relation = { who = THIS value = 400 }
						}
						
						FOR = { country_event = 110101 }
					}
				}
			}
			
			call_allies_tooltip_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						clr_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						
						FOR = {
							# Setup Detecting Conflicting Cores
							any_neighbor_country = {
								limit = {
									NOT = { tag = THIS }
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = {
										is_core = THIS
										NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
									}
								}
								set_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
							}
							country_event = 110102
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									OR = {
										good_evil_alignment = good_alignment
										good_evil_alignment = neutral_alignment
									}
									is_vassal = no
									OR = {
										is_culture_group = dwarves
										is_culture_group = northmen
										AND = {
											is_culture_group = teleri
											has_global_flag = alliance_of_dwarves_and_men_accept_teleri
										}
										AND = {
											is_culture_group = avari
											has_global_flag = alliance_of_dwarves_and_men_accept_avari
										}
										AND = {
											is_culture_group = anduinrim
											has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
										}
										AND = {
											is_culture_group = rohirrim
											has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
										}
										AND = {
											is_culture_group = hobbits
											has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						
						FOR = {
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							any_neighbor_country = {
								limit = {
									rank = 12 # Great or Secondary power
									capital_scope = { continent = europe } # Rhovanion
									NOT = { has_country_modifier = alliance_of_dwarves_and_men }
									NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
									alliance_with = THIS
									war = no
									is_vassal = no
									OR = {
										AND = {
											is_culture_group = teleri
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
										}
										AND = {
											is_culture_group = avari
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
										}
										AND = {
											is_culture_group = anduinrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
										}
										AND = {
											is_culture_group = rohirrim
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
										}
										AND = {
											is_culture_group = hobbits
											NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
										}
									}
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
							
							set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = { FOR = { country_event = 110105 } }
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 5.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_political_union_location value = 6.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
						FOR = {
							set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
							country_event = 110150 # Voting Handler
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§MLeave Alliance§!"
		
		set_global_flag = hidden_effects
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 402001 } } # Dynamic Loc Cleanup
		}
		
		clr_global_flag = hidden_effects
	}
}

# Core Dispute Menu - 1 option
country_event = {
	id = 110010
	title = "  Alliance of Dwarves and Men - Core Disputes"
	desc = ""
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		dynamic_loc_slot_13 = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			resolve_conflicting_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			request_return_of_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			return_cores_loc = {}
			empty_line_loc = {}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			
			# There shouldn't be anything with the modifier. But just in case
			FOR = { random_owned = { any_neighbor_province = { remove_province_modifier = dynamic_loc_potential_region_target } } }
			
			# Shouldn' be any global flags around. But just in case
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
		}
		
		clr_global_flag = hidden_effects
		
		
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RBack to main Alliance of Dwarves and Men menu§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110100 } }
		}
		
		clr_global_flag = hidden_effects
		
		triggered_event_alliance_of_dwarves_and_men_loc = {}
	}
}

# Core Dispute Menu - 2 option
country_event = {
	id = 110011
	title = "  Alliance of Dwarves and Men - Core Disputes"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		dynamic_loc_slot_13 = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			resolve_conflicting_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			request_return_of_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			return_cores_loc = {}
			empty_line_loc = {}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			
			# There shouldn't be anything with the modifier. But just in case
			FOR = { random_owned = { any_neighbor_province = { remove_province_modifier = dynamic_loc_potential_region_target } } }
			
			# Shouldn' be any global flags around. But just in case
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
		}
		
		clr_global_flag = hidden_effects
		
		
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RBack to main Alliance of Dwarves and Men menu§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110100 } }
		}
		
		clr_global_flag = hidden_effects
		
		triggered_event_alliance_of_dwarves_and_men_loc = {}
	}
}

# Core Dispute Menu - 3 option
country_event = {
	id = 110012
	title = "  Alliance of Dwarves and Men - Core Disputes"
	desc = ""
	picture = "organizations/alliance_dwarves_men_4"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_12 = {}
		dynamic_loc_slot_13 = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			resolve_conflicting_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			request_return_of_cores_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } } } }
			empty_line_loc = {}
			return_cores_loc = {}
			empty_line_loc = {}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			
			# There shouldn't be anything with the modifier. But just in case
			FOR = { random_owned = { any_neighbor_province = { remove_province_modifier = dynamic_loc_potential_region_target } } }
			
			# Shouldn' be any global flags around. But just in case
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
		}
		
		clr_global_flag = hidden_effects
		
		
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 1.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 2.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_core = THIS
										any_core = {
											NOT = { tag = THIS }
											has_country_modifier = alliance_of_dwarves_and_men
										}
									}
									add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
								}
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
				
				triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						
						# Sets the targeting modifier on every core of THIS where the owner is not us and is part of the organization
						all_core = {
							limit = {
								NOT = { owned_by = THIS }
								owner = { has_country_modifier = alliance_of_dwarves_and_men }
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						# Removes the modifier if the province is a core of the owner
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								NOT = { tag = THIS }
							}
							all_core = { remove_province_modifier = dynamic_loc_potential_region_target } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 2.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_return_cores_location value = 3.1 } } }
				}
			}
			
			owner = {
				random_owned = {
					limit = { has_global_flag = hidden_effects }
					owner = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
						any_owned = {
							limit = {
								NOT = { is_core = THIS }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
							add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
						}
						
						FOR = {
							set_variable = { which = dynamic_loc_region_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								any_neighbor_province = {
									limit = {
										is_state_capital = yes
										state_scope = { any_owned_province = { has_province_modifier = dynamic_loc_potential_region_target } }
									}
									owner = { FOR = { change_variable = { which = dynamic_loc_region_count value = 1 } } }
								}
							}
							
							country_event = 300008 # Region Loc Setting
							
							country_event = 110103 # Getting the callback
						}
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RBack to main Alliance of Dwarves and Men menu§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110100 } }
		}
		
		clr_global_flag = hidden_effects
		
		triggered_event_alliance_of_dwarves_and_men_loc = {}
	}
}

# Alliance of Men and Dwarves Region Selection 1
country_event = {
	id = 110020
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 2
country_event = {
	id = 110021
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 3
country_event = {
	id = 110022
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_4"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 4
country_event = {
	id = 110023
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_5"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_4 }
							remove_province_modifier = dynamic_loc_region_target_4
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 5
country_event = {
	id = 110024
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_6"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_4 }
							remove_province_modifier = dynamic_loc_region_target_4
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_5 }
							remove_province_modifier = dynamic_loc_region_target_5
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 6
country_event = {
	id = 110025
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_7"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_4 }
							remove_province_modifier = dynamic_loc_region_target_4
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_5 }
							remove_province_modifier = dynamic_loc_region_target_5
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_6 }
							remove_province_modifier = dynamic_loc_region_target_6
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 7
country_event = {
	id = 110026
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_8"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_7 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_4 }
							remove_province_modifier = dynamic_loc_region_target_4
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_5 }
							remove_province_modifier = dynamic_loc_region_target_5
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_6 }
							remove_province_modifier = dynamic_loc_region_target_6
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Seventh
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_7 }
							remove_province_modifier = dynamic_loc_region_target_7
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Region Selection 8
country_event = {
	id = 110027
	title = "  Alliance of Dwarves and Men - Region Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_9"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_7 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_8 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_1 }
							remove_province_modifier = dynamic_loc_region_target_1
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_2 }
							remove_province_modifier = dynamic_loc_region_target_2
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						limit = { owner = { has_global_flag = hidden_effects } }
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_3 }
							remove_province_modifier = dynamic_loc_region_target_3
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_4 }
							remove_province_modifier = dynamic_loc_region_target_4
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_5 }
							remove_province_modifier = dynamic_loc_region_target_5
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_6 }
							remove_province_modifier = dynamic_loc_region_target_6
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Seventh
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				owner = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = dynamic_loc_region_target_7 }
							remove_province_modifier = dynamic_loc_region_target_7
							add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
						}
					}
					
					set_variable = { which = dynamic_loc_country_count value = 0 }
					
					# Resets the naming count
					set_variable = { which = dynamic_loc_names_country value = 0 }
					
					# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
					# Cannot call 400000 as it will not fire in the necessary order
					any_country = {
						clr_country_flag = dynamic_loc_potential_country_target
						clr_country_flag = dynamic_loc_country_target_1
						clr_country_flag = dynamic_loc_country_target_2
						clr_country_flag = dynamic_loc_country_target_3
						clr_country_flag = dynamic_loc_country_target_4
						clr_country_flag = dynamic_loc_country_target_5
						clr_country_flag = dynamic_loc_country_target_6
						clr_country_flag = dynamic_loc_country_target_7
						clr_country_flag = dynamic_loc_country_target_8
					}
					
					# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
						owner = {
							any_neighbor_country = {
								limit = {
									has_country_modifier = alliance_of_dwarves_and_men
									any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
									NOT = { tag = THIS }
								}
								set_country_flag = dynamic_loc_potential_country_target
								FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
							}
						}
					}
					
					random_owned = {
						limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
							}
							set_country_flag = dynamic_loc_potential_country_target
							FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
						}
					}
					
					country_event = 300000 # Country Loc Setting
					
					country_event = 110104 # Getting the callback
					country_event = 400001 # Region cleanup
				}
			}
		}
		
		alliance_of_dwarves_and_men_region_selection_loc = {}
		empty_line_loc = {}
		triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	# Eighth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		# Exactly 8 options
		random_owned = {
			limit = { owner = { NOT = { FOR = { check_variable = { which = dynamic_loc_region_count value = 8.1 } } } } }
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						FOR = {
							random_owned = {
								any_neighbor_province = {
									limit = { has_province_modifier = dynamic_loc_region_target_8 }
									remove_province_modifier = dynamic_loc_region_target_8
									add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
								}
							}
							
							set_variable = { which = dynamic_loc_country_count value = 0 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_potential_country_target
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							random_owned = {
								limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
								owner = {
									any_neighbor_country = {
										limit = {
											has_country_modifier = alliance_of_dwarves_and_men
											any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
											NOT = { tag = THIS }
										}
										set_country_flag = dynamic_loc_potential_country_target
										FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
									}
								}
							}
							
							random_owned = {
								limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
								owner = {
									any_neighbor_country = {
										limit = {
											has_country_modifier = alliance_of_dwarves_and_men
											any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
											NOT = { tag = THIS }
										}
										set_country_flag = dynamic_loc_potential_country_target
										FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
									}
								}
							}
							
							random_owned = {
								limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
								any_country = {
									limit = {
										has_country_modifier = alliance_of_dwarves_and_men
										any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
									}
									set_country_flag = dynamic_loc_potential_country_target
									FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
								}
							}
							
							country_event = 300000 # Country Loc Setting
							
							country_event = 110104 # Getting the callback
							country_event = 400001 # Region cleanup
						}
					}
				}
				
			}
			alliance_of_dwarves_and_men_region_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}		}
		
		# More than 8 options
		random_owned = {
			limit = { FOR = { check_variable = { which = dynamic_loc_region_count value = 8.1 } } }
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						FOR = {
							# Account for the 7 that just got handled -- slot 8 is "next" (that just got selected)
							change_variable = { which = dynamic_loc_region_count value = -7 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_region value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 401001 as it will not fire in the necessary order
							random_owned = {
								any_neighbor_province = {
									remove_province_modifier = dynamic_loc_region_target_1
									remove_province_modifier = dynamic_loc_region_target_2
									remove_province_modifier = dynamic_loc_region_target_3
									remove_province_modifier = dynamic_loc_region_target_4
									remove_province_modifier = dynamic_loc_region_target_5
									remove_province_modifier = dynamic_loc_region_target_6
									remove_province_modifier = dynamic_loc_region_target_7
									remove_province_modifier = dynamic_loc_region_target_8
								}
							}
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							# Reset the region selection names
							country_event = { id = 300008 days = 0 } # Region Loc Setting
						}
						
						country_event = 110103 # Getting the callback
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_region_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 1
country_event = {
	id = 110030
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 100
		}
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
}

# Alliance of Men and Dwarves Country Selection 2
country_event = {
	id = 110031
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 3
country_event = {
	id = 110032
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_4"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 4
country_event = {
	id = 110033
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_5"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 5
country_event = {
	id = 110034
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_6"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 6
country_event = {
	id = 110035
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_7"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 7
country_event = {
	id = 110036
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_8"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_7 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Seventh
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_7 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_7 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Men and Dwarves Country Selection 8
country_event = {
	id = 110037
	title = "  Alliance of Dwarves and Men - Country Selection"
	desc = ""
	picture = "organizations/alliance_dwarves_men_9"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_1 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_2 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_5 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_6 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_7 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_8 = {}
		empty_line_loc = {}
	}
	
	# First
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_1 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Second
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_2 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Third
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_3 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fourth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_4 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Fifth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_5 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Sixth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_6 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Seventh
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_7 }
					set_country_flag = alliance_dwarves_men_selected_country
				}
				
				set_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { country_event = 110150 } # Voting Handler
				
				FOR = { country_event = 402001 } # Everything cleanup
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = hidden_effects
					has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = dynamic_loc_country_target_7 }
					set_country_flag = alliance_dwarves_men_selected_country
					country_event = 110166
				}
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		random_owned = {
			limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
			alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	# Eighth
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		# Exactly 8 options
		random_owned = {
			limit = { NOT = { FOR = { check_variable = { which = dynamic_loc_country_count value = 8.1 } } } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							has_global_flag = hidden_effects
							NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
						}
					}
					owner = {
						random_country = {
							limit = { has_country_flag = dynamic_loc_country_target_7 }
							set_country_flag = alliance_dwarves_men_selected_country
						}
						
						set_country_flag = alliance_dwarves_men_voting_initiator
						FOR = { country_event = 110150 } # Voting Handler
						
						FOR = { country_event = 402001 } # Everything cleanup
					}
				}
				
				random_owned = {
					limit = {
						owner = {
							has_global_flag = hidden_effects
							has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
						}
					}
					owner = {
						random_country = {
							limit = { has_country_flag = dynamic_loc_country_target_7 }
							set_country_flag = alliance_dwarves_men_selected_country
							country_event = 110166
						}
						FOR = {
							country_event = 402001 # Dynamic Loc Cleanup
							country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
						}
					}
				}
				
				random_owned = {
					limit = { owner = { NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } } }
					alliance_of_dwarves_and_men_country_selection_loc = {}
					empty_line_loc = {}
					triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
				}
				
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores } }
					alliance_of_dwarves_and_men_country_selection_return_cores_loc = {}
				}
			}
			
			alliance_of_dwarves_and_men_country_selection_loc = {}
			empty_line_loc = {}
			triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		}
		
		# More than 8 options
		random_owned = {
			limit = { FOR = { check_variable = { which = dynamic_loc_country_count value = 8.1 } } }
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						FOR = {
							# Account for the 7 that just got handled -- slot 8 is "next" (that just got selected)
							change_variable = { which = dynamic_loc_country_count value = -7 }
							
							# Resets the naming count
							set_variable = { which = dynamic_loc_names_country value = 0 }
							
							# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
							# Cannot call 400000 as it will not fire in the necessary order
							any_country = {
								clr_country_flag = dynamic_loc_country_target_1
								clr_country_flag = dynamic_loc_country_target_2
								clr_country_flag = dynamic_loc_country_target_3
								clr_country_flag = dynamic_loc_country_target_4
								clr_country_flag = dynamic_loc_country_target_5
								clr_country_flag = dynamic_loc_country_target_6
								clr_country_flag = dynamic_loc_country_target_7
								clr_country_flag = dynamic_loc_country_target_8
							}
							
							# Cannot call 402000 as it will not fire in the necessary order. Cannot put the standard effects in as this will mess up the renaming
							
							country_event = 300000 # Country Loc Setting
						}
						
						country_event = 110104 # Getting the callback
					}
				}
			}
			
			triggered_event_alliance_of_dwarves_and_men_country_selection_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RExit§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FOR = {
					country_event = 402001 # Dynamic Loc Cleanup
					country_event = 110110 # Clears Alliance of Dwarves and Men modifiers and flags
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men Specific Flavor - 1 option
country_event = {
	id = 110040
	title = "  Alliance of Dwarves and Men - Specific Flavor"
	desc = ""
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0.9 } } } }
			empty_line_loc = {}
			settle_cores_of_dadhriks_gap_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 0.9 } } } }
			empty_line_loc = {}
			settle_cores_of_mountainlands_loc = {}
			empty_line_loc = {}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			
			# There shouldn't be anything with the modifier. But just in case
			FOR = { random_owned = { any_neighbor_province = { remove_province_modifier = dynamic_loc_potential_region_target } } }
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 1.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_657 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Dádhrik's Gap
						country_event = 110042
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 1.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_660 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Mountainlands
						country_event = 110042
					}
				}
			}
		}
		
		triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RBack to main Alliance of Dwarves and Men menu§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110100 } }
		}
		
		clr_global_flag = hidden_effects
		
		triggered_event_alliance_of_dwarves_and_men_loc = {}
	}
}

# Alliance of Dwarves and Men Specific Flavor - 2 option
country_event = {
	id = 110041
	title = "  Alliance of Dwarves and Men - Specific Flavor"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		
		dynamic_loc_slot_3 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_4 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		empty_line_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0.9 } } } }
			empty_line_loc = {}
			settle_cores_of_dadhriks_gap_loc = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 0.9 } } } }
			empty_line_loc = {}
			settle_cores_of_mountainlands_loc = {}
			empty_line_loc = {}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			
			# There shouldn't be anything with the modifier. But just in case
			FOR = { random_owned = { any_neighbor_province = { remove_province_modifier = dynamic_loc_potential_region_target } } }
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 1.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_657 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Dádhrik's Gap
						country_event = 110042
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 0.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 1.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_660 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Mountainlands
						country_event = 110042
					}
				}
			}
		}
		
		triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 2.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_657 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Dádhrik's Gap
						country_event = 110042
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 1.9 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 2.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						ERE_660 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Mountainlands
						country_event = 110042
					}
				}
			}
		}
		
		triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "§RBack to main Alliance of Dwarves and Men menu§!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110100 } }
		}
		
		clr_global_flag = hidden_effects
		
		triggered_event_alliance_of_dwarves_and_men_loc = {}
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute - Northman realm deciding how to handle claims to land
country_event = {
	id = 110042
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = "EVTDESC110042"
	picture = "organizations/alliance_dwarves_men_4"
	
	is_triggered_only = yes
	
	option = {
		name = "Drop the claim completely (§BHistorical§!)"
		
		set_global_flag = hidden_effects
		
		badboy = -5
		plurality = 3
		
		random_country = {
			limit = {
				THIS = { is_greater_power = yes }
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
			}
			diplomatic_influence = { who = THIS value = 50 }
		}
		
		# Doing this outside the random_country in case somehow one of the provinces in the region is not owned by the same owner
		FOR = {
			random_owned = {
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_657 # Dádhrik's Gap
						owner = { has_global_flag = hidden_effects }
					}
					owner = { set_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
					dynamic_loc_slot_11 = { state_scope = { change_region_name = "The Northmen have decided to drop their claims to Dádhrik's Gap!" } }
				}
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_660 # Mountainlands
						owner = { has_global_flag = hidden_effects }
					}
					dynamic_loc_slot_11 = { state_scope = { change_region_name = "The Northmen have decided to drop their claims to Mountainlands!" } }
				}
				any_neighbor_province = {
					limit = { has_province_modifier = alliance_dwarves_men_selected_region }
					remove_core = DAL
					remove_core = RHO
					remove_core = GRA
					remove_core = ADH
				}
			}
			
			random_owned = {
				limit = { owner = { has_global_flag = hidden_effects } }
				country_event = 110110 # Alliance of Dwarves and Men cleanup
				owner = { dynamic_loc_slot_10 = { state_scope = { change_region_name = "§MThis event is cosmetic, to allow you to know about changing within the Alliance of Dwarves and Men.§!" } } }
			}
		}
		
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
			}
			relation = { who = THIS value = 50 }
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		}
		
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
				has_global_flag = hidden_effects
			}
			country_event = 110049
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 50
		}
	}
	
	option = {
		name = "Drop the claim, but only for resettlement of our people"
		
		set_global_flag = hidden_effects
		
		badboy = 2
		plurality = 2
		
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
				has_global_flag = hidden_effects
			}
			country_event = 110043
		}
		
		triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_global_flag = railroading_enabled
			}
		}
	}
	
	option = {
		name = "Press the claim"
		
		set_global_flag = hidden_effects
			
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { dynamic_loc_slot_10 = { state_scope = { change_region_name = "The Northmen are requestiong the return of" } } }
			owner = { dynamic_loc_slot_12 = { state_scope = { change_region_name = "What shoud be our response?" } } }
		}
		
		FOR = {
			random_owned = {
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_657 # Dádhrik's Gap
						owner = { has_global_flag = hidden_effects }
					}
					owner = { dynamic_loc_slot_11 = { state_scope = { change_region_name = "Dádhrik's Gap." } } }
				}
			}
		}
		
		FOR = {
			random_owned = {
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_660 # Mountainlands
						owner = { has_global_flag = hidden_effects }
					}
					owner = { dynamic_loc_slot_11 = { state_scope = { change_region_name = "Mountainlands." } } }
				}
			}
		}
		
		badboy = 7
		plurality = 1
		
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
				has_global_flag = hidden_effects
			}
			country_event = 110047
		}
		
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				any_owned_province = { has_province_modifier = alliance_dwarves_men_selected_region }
			}
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "We will revisit this claim"
		
		set_global_flag = hidden_effects
		
		random_country = {
			limit = {
				tag = FOR
				has_global_flag = hidden_effects
			}
			country_event = 110110 # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute -- Dwarves asked to send Northmen back to Northmen realms
country_event = {
	id = 110043
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = "EVTDESC110043"
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	option = {
		name = "This is acceptable"
		
		set_global_flag = hidden_effects
		
		badboy = -2
		plurality = -1
		
		# Mimicking the results of following the historical option with a little bit of forced migration
		relation = { who = FROM value = 50 }
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_657 # Dádhrik's Gap
				owner = { has_global_flag = hidden_effects }
			}
			owner = {
				FROM = { country_event = 110044 }
				set_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap
			}
		}
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_660 # Mountainlands
				owner = { has_global_flag = hidden_effects }
			}
			owner = { FROM = { country_event = 110045 } }
		}
		
		# Doing this outside the random_country in case somehow one of the provinces in the region is not owned by the same owner
		FOR = {
			random_owned = {
				any_neighbor_province = {
					limit = { has_province_modifier = alliance_dwarves_men_selected_region }
					remove_core = DAL
					remove_core = RHO
					remove_core = GRA
					remove_core = ADH
				}
			}
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				NOT = { relation = { who = FROM value = 200 } }
			}
		}
	}
	
	option = {
		name = "Unacceptable"
		
		set_global_flag = hidden_effects
		
		plurality = 1
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_657 # Dádhrik's Gap
				owner = { has_global_flag = hidden_effects }
			}
			owner = {
				set_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
				FROM = { country_event = 110046 }
			}
		}
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_660 # Mountainlands
				owner = { has_global_flag = hidden_effects }
			}
			owner = {
				set_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
				FROM = { country_event = 110046 }
			}
		}
		
		FROM = { triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {} }
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				relation = { who = FROM value = 200 }
			}
		}
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute --Dwarves transfer Dádhrik's Gap Northmen to Dalelands
country_event = {
	id = 110044
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = "EVTDESC110044"
	picture = "organizations/alliance_dwarves_men_5"
	
	is_triggered_only = yes
	
	option = {
		name = "Kotstó"
		
		plurality = -0.5
		
		ERE_657 = { # Dádhrik's Gap
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 141 # Kotstó
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Dale"
		
		plurality = -0.5
		
		ERE_657 = { # Dádhrik's Gap
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 652 # Dale
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Felagsgard"
		
		plurality = -0.5
		
		ERE_657 = { # Dádhrik's Gap
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 655 # Felagsgard
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Alduringard"
		
		plurality = -0.5
		
		ERE_657 = { # Dádhrik's Gap
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 141 # Alduringard
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Let the people decide"
		
		plurality = -1
		
		ERE_657 = { # Dádhrik's Gap
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = {
						OR = {
							province_id = 658 # Setborg
							province_id = 689 # Enrungagard
							province_id = 1170 # Mordolt
						}
					}
				}
				move_pop = 655 # Felagsgard
			}
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = {
						OR = {
							province_id = 657 # Thurasigborg
							province_id = 1169 # Shieldwall
						}
					}
				}
				move_pop = 656 # Alduringard
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 100
		}
	}
}

# # Alliance of Dwarves and Men - Northmen Core Dispute --Dwarves transfer Mountainlands Northmen to Dalelands
country_event = {
	id = 110045
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = "EVTDESC110044"
	picture = "organizations/alliance_dwarves_men_5"
	
	is_triggered_only = yes
	
	option = {
		name = "Flyiarstadur"
		
		ERE_660 = { # Mountainlands
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 355 # Flyiarstadur
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Withibord"
		
		ERE_660 = { # Mountainlands
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 651 # Withibord
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Pennstó"
		
		ERE_660 = { # Mountainlands
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 661 # Pennstó
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Thliuhanastath"
		
		ERE_660 = { # Mountainlands
			any_pop = {
				limit = { is_culture_group = northmen }
				move_pop = 1377 # Thliuhanastath
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Let the people decide"
		
		ERE_660 = { # Mountainlands
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = {
						OR = {
							province_id = 396 # Steinholl
							province_id = 660 # Erebor
						}
					}
				}
				move_pop = 355 # Flyiarstadur
			}
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = { province_id = 664 } # Weniaborg
				}
				move_pop = 651 # Withibord
			}
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = { province_id = 659 } # Vargurat
				}
				move_pop = 661 # Pennstó
			}
			any_pop = {
				limit = {
					is_culture_group = northmen
					location = { province_id = 1168 } # Barad Draug
				}
				move_pop = 1377 # Thliuhanastath
			}
		}
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 100
		}
	}
}

# # Alliance of Dwarves and Men - Northmen Core Dispute --Dwarves refused Northman offer
country_event = {
	id = 110046
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = "EVTDESC110046"
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	option = {
		name = "We will back down"
		
		plurality = 0.5
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				FROM = {
					any_owned = {
						limit = {
							has_province_modifier = alliance_dwarves_men_selected_region
						}
						add_province_modifier = { name = alliance_dwarves_men_diplomacy_stalled duration = 3650 }
					}
				}
				
				FOR = { country_event = 110110 } # Alliance of Dwarves and Men cleanup
			}
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "We will ask the alliance for a vote"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				set_country_flag = alliance_dwarves_men_voting_initiator # The realm asking for the land is the one getting this event
				FROM = { set_country_flag = alliance_dwarves_men_selected_country } # FROM is the realm that owns the land
				FOR = { country_event = 110150 } # Voting Handler
			}
		}
		
		triggered_event_alliance_of_dwarves_and_men_diplomatic_strategy_loc = {}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute -- Dwarves asked to send Northmen back to Northmen realms
country_event = {
	id = 110047
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = ""
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		dynamic_loc_slot_11 = {}
		dynamic_loc_slot_12 = {}
	}
	
	option = {
		name = "This is acceptable"
		
		set_global_flag = hidden_effects
		
		badboy = -5
		plurality = 3
		
		relation = { who = FROM value = 50 }
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_657 # Dádhrik's Gap
			}
			owner = { ERE_657 = { remove_core = THIS } }
		}
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_660 # Mountainlands
			}
			owner = { ERE_660 = { remove_core = THIS } }
		}
		
		# Doing this outside the random_country in case somehow one of the provinces in the region is not owned by the same owner
		FOR = {
			random_owned = {
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_657 # Dádhrik's Gap
						owner = { has_global_flag = hidden_effects }
					}
					owner = { set_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
				}
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_660 # Mountainlands
						owner = { has_global_flag = hidden_effects }
					}
					owner = { set_global_flag = alliance_of_dwarves_and_men_settled_mountainlands }
				}
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FROM = { country_event = 110048 } }
		}
		
		FROM = { triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {} }
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 0
		}
	}
	
	option = {
		name = "Unacceptable"
		
		set_global_flag = hidden_effects
		
		plurality = 1
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FROM = { country_event = 110046 } }
		}
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_657 # Dádhrik's Gap
				owner = { has_global_flag = hidden_effects }
			}
			owner = { set_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer }
		}
		
		random_owned = {
			limit = {
				has_province_modifier = alliance_dwarves_men_selected_region
				region = ERE_660 # Mountainlands
				owner = { has_global_flag = hidden_effects }
			}
			owner = { set_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer }
		}
		
		FROM = { triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {} }
		
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 100
		}
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute -- Northman realm gains control of region
country_event = {
	id = 110048
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = ""
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "They accept!"
		
		set_global_flag = hidden_effects
		
		plurality = -0.5
		
		random_country = {
			limit = {
				tag = FROM
				has_global_flag = hidden_effects
			}
			any_owned = {
				limit = { has_province_modifier = alliance_dwarves_men_selected_region }
				add_core = THIS
				secede_province = THIS
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = { FOR = { country_event = 110110 } } # Alliance of Dwarves and Men cleanup
		}
		
		gain_cores_and_ownership_loc = {}
		
		clr_global_flag = hidden_effects
	}
}

# Alliance of Dwarves and Men - Northmen Core Dispute
country_event = {
	id = 110049
	title = "  Alliance of Dwarves and Men - Northmen Core Dispute"
	desc = ""
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_10 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_11 = {}
		empty_line_loc = {}
	}
	
	option = {
		name = "Good"
	}
}

# Alliance of Dwarves and Men Main Menu Setup/Option Calculator -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110100
	title = "Alliance of Dwarves and Men Setup"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Continue"
		
		# Using the higher numbers to make sure there's no overlap
		dynamic_loc_slot_10 = { state_scope = { change_region_name = "Depending on the state of Middle Earth and the alliance, you may be able to call allies to war, dispute cores, invite realms and culture groups to the alliance, access flavor specific to your realm and alliance, or propose economic and political unions." } }
		dynamic_loc_slot_11 = { state_scope = { change_region_name = "In order to invite realms, you need to have an alliance, and the realm in question must be one of the accepted cultures groups of the alliance." } }
		dynamic_loc_slot_12 = { state_scope = { change_region_name = "The culture groups are|" } }
		dynamic_loc_slot_3 = { state_scope = { change_region_name = "Dwarven" } }
		dynamic_loc_slot_4 = { state_scope = { change_region_name = "Northmen" } }
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri } }
			dynamic_loc_slot_5 = { state_scope = { change_region_name = "Teleri" } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_avari } }
			dynamic_loc_slot_6 = { state_scope = { change_region_name = "Avari" } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim } }
			dynamic_loc_slot_7 = { state_scope = { change_region_name = "Anduinrim" } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim } }
			dynamic_loc_slot_8 = { state_scope = { change_region_name = "Rohirrim" } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits } }
			dynamic_loc_slot_9 = { state_scope = { change_region_name = "Hobbits" } }
		}
		
		# Setup Request Return of Cores {
		FROM = {
			all_core = {
				limit = {
					NOT = { owned_by = FROM }
					owner = { has_country_modifier = alliance_of_dwarves_and_men }
				}
				add_province_modifier = { name = province_target_alliance_men_dwarves_request_return_of_cores duration = 1 }
			}
		}
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { tag = FROM }
			}
			all_core = { remove_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
		}
		# }
		
		# Calculate the number of options that should be shown {
		set_variable = { which = menu_option_number value = 1 } # Defaulting to 1 to handle the Exit button. For some reason I decided to not update this to handle "Leave Alliance", so all of the background images are 1 higher than one might expect (given the corresponding value of menu_option_number)
		
		set_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0 }
		set_variable = { which = alliance_dwarves_men_core_dispute_location value = 0 }
		set_variable = { which = alliance_dwarves_men_invite_realm_location value = 0 }
		set_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0 }
		set_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0 }
		set_variable = { which = alliance_dwarves_men_economic_union_location value = 0 }
		set_variable = { which = alliance_dwarves_men_political_union_location value = 0 }
		
		# Call to Arms
		random_owned = {
			limit = {
				FROM = { war = yes }
				NOT = { FROM = { has_country_modifier = call_to_arms_cooldown } }
				owner = {
					any_neighbor_country = {
						has_country_modifier = alliance_of_dwarves_and_men
						war = no
						is_vassal = no # There shouldn't be any. But just in case
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_call_to_arms_location value = 1 }
			}
		}
		
		# Core Dispute Menu
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					OR = {
						# Resolve Conflicting Cores
						has_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected
						# Request Return of Cores
						FROM = {
							any_core = {
								has_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores
								NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
							}
						}
						# Return Cores
						FROM = {
							any_owned_province = {
								NOT = { is_core = FROM }
								NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
								any_core = {
									exists = yes
									has_country_modifier = alliance_of_dwarves_and_men
								}
							}
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_core_dispute_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_core_dispute_location value = 1 } }
				}
			}
			any_neighbor_province = { remove_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores }
		}
		
		# Invite Realm
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					any_neighbor_country = {
						capital_scope = { continent = europe } # Rhovanion
						NOT = { has_country_modifier = alliance_of_dwarves_and_men }
						NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
						alliance_with = FROM
						war = no
						is_vassal = no
						OR = {
							good_evil_alignment = good_alignment
							good_evil_alignment = neutral_alignment
						}
						OR = {
							is_culture_group = dwarves
							is_culture_group = northmen
							AND = {
								is_culture_group = teleri
								has_global_flag = alliance_of_dwarves_and_men_accept_teleri
							}
							AND = {
								is_culture_group = avari
								has_global_flag = alliance_of_dwarves_and_men_accept_avari
							}
							AND = {
								is_culture_group = anduinrim
								has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
							}
							AND = {
								is_culture_group = rohirrim
								has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
							}
							AND = {
								is_culture_group = hobbits
								has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
							}
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_invite_realm_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_invite_realm_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_invite_realm_location value = 1 } }
				}
			}
		}
		
		# Expand Cultural Reach
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					any_neighbor_country = {
						rank = 12 # Great or Secondary power
						capital_scope = { continent = europe } # Rhovanion
						NOT = { has_country_modifier = alliance_of_dwarves_and_men }
						NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
						alliance_with = FROM
						war = no
						is_vassal = no
						OR = {
							AND = {
								is_culture_group = teleri
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
							}
							AND = {
								is_culture_group = avari
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
							}
							AND = {
								is_culture_group = anduinrim
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
							}
							AND = {
								is_culture_group = rohirrim
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
							}
							AND = {
								is_culture_group = hobbits
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
							}
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 1 } }
				}
			}
		}
		
		# Specific Flavor Menu
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					FROM = {
						OR = {
							AND = { # Settle the Cores of Dádhrik's Gap
								OR = {
									has_country_flag = DAL_content
									tag = RHO
								}
								ERE = { has_country_modifier = alliance_of_dwarves_and_men }
								OR = {
									primary_culture = adhalling
									accepted_culture = adhalling
								}
								ERE_657 = { # Dádhrik's Gap
									owned_by = ERE
									NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
								}
								NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
							}
							AND = { # Settle the Cores of Mountainlands
								OR = {
									has_country_flag = DAL_content
									tag = RHO
								}
								ERE = { has_country_modifier = alliance_of_dwarves_and_men }
								OR = {
									primary_culture = grammas
									accepted_culture = grammas
								}
								ERE_660 = { # Mountainlands
									owned_by = ERE
									NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
								}
								NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_mountainlands }
							}
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_specific_flavor_location value = 1 } }
				}
			}
		}
		
		# Propose an Economic Union
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					FROM = { is_greater_power = yes }
					NOT = { has_country_modifier = alliance_of_dwarves_and_men_union_countdown }
					NOT = { has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted }
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_economic_union_location value = 1 } }
				}
			}
		}
		
		# Propose a Political Union
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					FROM = { is_greater_power = yes }
					NOT = { has_global_flag = railroading_enabled }
					NOT = { has_country_modifier = alliance_of_dwarves_and_men_union_countdown }
					has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted
					FROM = { diplomacy_5 = 1 }
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_political_union_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_call_to_arms_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_core_dispute_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_invite_realm_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_expand_culture_reach_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_specific_flavor_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_economic_union_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_political_union_location value = 1 } }
				}
			}
		}
		# }
		
		# Fire the menu (based upon the number of potential options) for the triggering realm
		random_owned = {
			limit = { owner = { NOT = { check_variable = { which = menu_option_number value = 1.1 } } } }
			owner = { FROM = { country_event = 110000 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 1.9 }
					NOT = { check_variable = { which = menu_option_number value = 2.1 } }
				}
			}
			owner = { FROM = { country_event = 110001 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 2.9 }
					NOT = { check_variable = { which = menu_option_number value = 3.1 } }
				}
			}
			owner = { FROM = { country_event = 110002 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 3.9 }
					NOT = { check_variable = { which = menu_option_number value = 4.1 } }
				}
			}
			owner = { FROM = { country_event = 110003 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 4.9 }
					NOT = { check_variable = { which = menu_option_number value = 5.1 } }
				}
			}
			owner = { FROM = { country_event = 110004 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 5.9 }
					NOT = { check_variable = { which = menu_option_number value = 6.1 } }
				}
			}
			owner = { FROM = { country_event = 110005 } }
		}
		
		random_owned = {
			limit = {
				owner = { check_variable = { which = menu_option_number value = 6.9 } }
			}
			owner = { FROM = { country_event = 110006 } }
		}
	}
}

# Alliance of Dwarves and Men Call Allies -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110101
	title = "A Call to Arms"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		FROM = {
			war = {
				attacker_goal = { casus_belli = call_allies_cb }
				call_ally = yes
				# Audax Validator "." Ignore_NEXT
				target = ---
			}
			
			add_country_modifier = { name = call_to_arms_cooldown duration = 365 }
		}
	}
}

# Alliance of Dwarves and Men Core Dispute Menu Setup/Option Calculator -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110102
	title = "Alliance of Dwarves and Men - Cores Disputes"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Continue"
		
		# Using higher slots to avoid conflicts
		dynamic_loc_slot_10 = { state_scope = { change_region_name = "Either one realm within the alliance owns our cores, or we own some of the cores of other alliance members." } }
		dynamic_loc_slot_11 = { state_scope = { change_region_name = "If there are any overlaps in cores, we will be able to resolve them via an alliance-wide vote, with the loser losing cores over the selected region." } }
		dynamic_loc_slot_12 = { state_scope = { change_region_name = "If we own the cores of another alliance member, we will be able to return them. Likewise, if another realm owns our cores, we will be able to request them back." } }
		dynamic_loc_slot_13 = { state_scope = { change_region_name = "If the alliance member refuses, an alliance-wide vote will take place. Should we lose this vote, we will lose cores over the selected region." } }
		
		# Setup Request Return of Cores {
		FROM = {
			all_core = {
				limit = {
					NOT = { owned_by = FROM }
					owner = { has_country_modifier = alliance_of_dwarves_and_men }
				}
				add_province_modifier = { name = province_target_alliance_men_dwarves_request_return_of_cores duration = 1 }
			}
		}
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { tag = FROM }
			}
			all_core = { remove_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores } # The only provinces retaining the modifier are those that are cores of the decision taker, but not of the owner
		}
		# }
		
		# Calculate the number of options that should be shown {
		set_variable = { which = menu_option_number value = 1 } # Defaulting to 1 to handle the Exit button
		
		set_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0 }
		set_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0 }
		set_variable = { which = alliance_dwarves_men_return_cores_location value = 0 }
		
		# Resolve Conflicting Cores
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_conflicting_cores_detected } }
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 1 }
			}
		}
		
		# Request Return of Cores
		random_owned = {
			limit = {
				owner = {
					FROM = {
						any_core = {
							has_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores
							NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 1 } }
				}
			}
			any_neighbor_province = { remove_province_modifier = province_target_alliance_men_dwarves_request_return_of_cores }
		}
		
		# Return Cores
		random_owned = {
			limit = {
				owner = {
					FROM = {
						any_owned_province = {
							NOT = { is_core = FROM }
							NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
							any_core = {
								exists = yes
								has_country_modifier = alliance_of_dwarves_and_men
							}
						}
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_return_cores_location value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_resolve_conflicting_cores_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_return_cores_location value = 1 } }
				}
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_request_return_of_cores_location value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_return_cores_location value = 1 } }
				}
			}
		}
		# }
		
		# Fire the menu (based upon the number of potential options) for the triggering realm
		random_owned = {
			limit = {
				owner = { NOT = { check_variable = { which = menu_option_number value = 2.1 } } }
			}
			owner = { FROM = { country_event = 110010 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = menu_option_number value = 2.9 }
					NOT = { check_variable = { which = menu_option_number value = 3.1 } }
				}
			}
			owner = { FROM = { country_event = 110011 } }
		}
		
		random_owned = {
			limit = {
				owner = { check_variable = { which = menu_option_number value = 3.9 } }
			}
			owner = { FROM = { country_event = 110012 } }
		}
	}
}

# Alliance of Dwarves and Men Core Region Callback -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110103
	title = "Alliance of Dwarves and Men - Region Callback"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Continue"
		
		dynamic_loc_slot_10 = { state_scope = { change_region_name = "Select one of the regions listed below to" } }
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "resolve conflicting cores." } }
		}
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "request ownership." } }
		}
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "return cores." } }
		}
		
		# When there are more than 8 options, we want to display the last option as "Next"
		random_country = {
			limit = {
				tag = FOR
				check_variable = { which = dynamic_loc_region_count value = 8.9 }
			}
			dynamic_loc_slot_8 = { state_scope = { change_region_name = "§BNext§!" } }
		}
		
		# Cannot use FROM as country_event = { id = [id] days = 0 } resets FROM to the realm that got the event fired via this syntax. When setting the dynamic loc names, a bunch of events are called for FOR this way to ensure that the player doesn't need to wait a tick to see the loced names
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 0.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 1.1 } }
				}
			}
			country_event = 110020
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 1.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 2.1 } }
				}
			}
			country_event = 110021
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 2.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 3.1 } }
				}
			}
			country_event = 110022
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 3.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 4.1 } }
				}
			}
			country_event = 110023
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 4.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 5.1 } }
				}
			}
			country_event = 110024
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 5.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 6.1 } }
				}
			}
			country_event = 110025
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_region_count value = 6.9 }
					NOT = { check_variable = { which = dynamic_loc_region_count value = 7.1 } }
				}
			}
			country_event = 110026
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { check_variable = { which = dynamic_loc_region_count value = 7.9 } }
			}
			country_event = 110027
		}
	}
}

# Alliance of Dwarves and Men Core Country Callback -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110104
	title = "Alliance of Dwarves and Men - Country Callback"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Continue"
		
		dynamic_loc_slot_10 = { state_scope = { change_region_name = "Select one of the realms listed below to" } }
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "resolve conflicting cores." } }
		}
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "request ownership." } }
		}
		
		random_country = {
			limit = { has_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores }
			dynamic_loc_slot_11 = { state_scope = { change_region_name = "return cores." } }
		}
		
		# When there are more than 8 options, we want to display the last option as "Next"
		random_country = {
			limit = {
				tag = FOR
				check_variable = { which = dynamic_loc_country_count value = 8.9 }
			}
			dynamic_loc_slot_8 = { state_scope = { change_region_name = "§BNext§!" } }
		}
		
		# Cannot use FROM as country_event = { id = [id] days = 0 } resets FROM to the realm that got the event fired via this syntax. When setting the dynamic loc names, a bunch of events are called for FOR this way to ensure that the player doesn't need to wait a tick to see the loced names
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 0.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 1.1 } }
				}
			}
			country_event = 110030
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 1.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 2.1 } }
				}
			}
			country_event = 110031
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 2.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 3.1 } }
				}
			}
			country_event = 110032
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 3.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 4.1 } }
				}
			}
			country_event = 110033
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 4.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 5.1 } }
				}
			}
			country_event = 110034
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 5.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 6.1 } }
				}
			}
			country_event = 110035
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = {
					check_variable = { which = dynamic_loc_country_count value = 6.9 }
					NOT = { check_variable = { which = dynamic_loc_country_count value = 7.1 } }
				}
			}
			country_event = 110036
		}
		
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				FOR = { check_variable = { which = dynamic_loc_country_count value = 7.9 } }
			}
			country_event = 110037
		}
	}
}

# Alliance of Dwarves and Men Specific Flavor Menu Setup/Option Calculator -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110105
	title = "Alliance of Dwarves and Men - Specific Flavor"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Continue"
		
		# Using the higher numbers to make sure there's no overlap
		dynamic_loc_slot_3 = { state_scope = { change_region_name = "In this menu, you can access any flavor specific to the Alliance of Dwarves and Men. Below are the possible options|" } }
		dynamic_loc_slot_4 = { state_scope = { change_region_name = "Barding Realm/Rhovanion| Settle the cores of Dadhrik's Gap and the cores of Mountainlands" } }
		
		# Calculate the number of options that should be shown
		set_variable = { which = menu_option_number value = 1 } # Defaulting to 1 to handle the Exit button.
		
		set_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0 }
		set_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 0 }
		
		# Settle the Cores of Dádhrik's Gap
		random_owned = {
			limit = {
				owner = {
					FROM = {
						OR = {
							has_country_flag = DAL_content
							tag = RHO
						}
						ERE = { has_country_modifier = alliance_of_dwarves_and_men }
						OR = {
							primary_culture = adhalling
							accepted_culture = adhalling
						}
						ERE_657 = { # Dádhrik's Gap
							owned_by = ERE
							NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
						}
						NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 1 }
			}
		}
		
		# Settle the Cores of Mountainlands
		random_owned = {
			limit = {
				owner = {
					FROM = {
						OR = {
							has_country_flag = DAL_content
							tag = RHO
						}
						ERE = { has_country_modifier = alliance_of_dwarves_and_men }
						OR = {
							primary_culture = grammas
							accepted_culture = grammas
						}
						ERE_660 = { # Mountainlands
							owned_by = ERE
							NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
						}
						NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_mountainlands }
					}
				}
			}
			owner = {
				change_variable = { which = menu_option_number value = 1 }
				change_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 1 }
				
				random_owned = {
					limit = { owner = { check_variable = { which = alliance_dwarves_men_resolve_settle_cores_of_dadhriks_gap value = 0.9 } } }
					owner = { change_variable = { which = alliance_dwarves_men_request_settle_cores_of_mountainlands value = 1 } }
				}
			}
		}
		
		# Fire the menu (based upon the number of potential options) for the triggering realm. We can assume that there is at least one option, as the only way to enter this menu is via passing through at least one option's condtions
		random_owned = {
			limit = {
				owner = { NOT = { check_variable = { which = menu_option_number value = 2.1 } } }
			}
			owner = { FROM = { country_event = 110040 } }
		}
		
		random_owned = {
			limit = {
				owner = { check_variable = { which = menu_option_number value = 2.9 } }
			}
			owner = { FROM = { country_event = 110041 } }
		}
	}
}

# Alliance of Dwarves and Men Cleanup -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110110
	title = "Alliance of Dwarves and Men Cleanup"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Clean up"
		
		FOR = {
			random_owned = { any_neighbor_province = { remove_province_modifier = alliance_dwarves_men_selected_region } }
			set_variable = { which = alliance_dwarves_men_total_for value = 0 }
			set_variable = { which = alliance_dwarves_men_total_abstained value = 0 }
			set_variable = { which = alliance_dwarves_men_total_against value = 0 }
		}
		any_country = {
			clr_country_flag = alliance_dwarves_men_selected_country
			clr_country_flag = alliance_dwarves_men_voting_initiator
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_returning_cores
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
			clr_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
			clr_global_flag = alliance_of_dwarves_and_men_in_voting
			clr_country_flag = alliance_dwarves_men_voted_for
			clr_country_flag = alliance_dwarves_men_abstained
			clr_country_flag = alliance_dwarves_men_voted_against
			clr_country_flag = alliance_dwarves_men_will_agree
			clr_country_flag = alliance_dwarves_men_will_disagree
			clr_country_flag = alliance_dwarves_men_will_abstain
		}
	}
}

# Voting Handler -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110150
	title = "Alliance of Dwarves and Men Voting Handler"
	desc = ""
	picture = "organization/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Fire Voting"
		
		# If there's no voting initator or selected country, something went wrong. Don't proceed to voting
		random_owned = {
			limit = {
				OR = {
					NOT = { FOR = { any_neighbor_country = { has_country_flag = alliance_dwarves_men_voting_initiator } } }
					NOT = { FOR = { any_neighbor_country = { has_country_flag = alliance_dwarves_men_selected_country } } }
				}
			}
			owner = {
				FOR = { country_event = 110110 } # Alliance of Dwarves and Men Cleanup
				FOR = { country_event = 402001 } # Dynamic Loc Cleanup
			}
		}
		
		random_owned = {
			limit = {
				FOR = { any_neighbor_country = { has_country_flag = alliance_dwarves_men_voting_initiator } }
				FOR = { any_neighbor_country = { has_country_flag = alliance_dwarves_men_selected_country } }
			}
			owner = {
				set_global_flag = alliance_of_dwarves_and_men_in_voting
				FOR = { add_country_modifier = { name = alliance_of_dwarves_and_men_recently_voted duration = 30 } }
				add_country_modifier = { name = alliance_of_dwarves_and_men_recently_voted duration = 30 }
				any_country = {
					limit = { has_country_modifier = alliance_of_dwarves_and_men }
					add_country_modifier = { name = alliance_of_dwarves_and_men_recently_voted duration = 30 }
				}
				
				country_event = { id = 110152 days = 15 } # Handler 2
			}
		}
	}
}

# 110151 not used

# Voting Handler 2 -- sets the initiator's loc to dynamic loc slot 1 -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110152
	title = "Alliance of Dwarves and Men Voting Handler 2"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Fire Voting"
		
		country_event = { id = 110175 days = 0 } # Voting Loc Setting
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_1
		}
		
		set_variable = { which = dynamic_loc_country_count value = 0 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_country value = 0 }
	
		random_country = {
			limit = { has_country_flag = alliance_dwarves_men_voting_initiator }
			FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
			set_country_flag = dynamic_loc_potential_country_target
		}
		
		country_event = 300000 # Country Loc Setting
		
		country_event = 110161 # Hander 3
	}
}

# Voting Handler 3 -- sets the defender's loc to dynamic loc slot 2 -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110161
	title = "Alliance of Dwarves and Men Voting Handler 3"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Fire Voting"
		
		country_event = { id = 110175 days = 0 } # Voting Loc Setting
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_1
		}
		
		set_variable = { which = dynamic_loc_country_count value = 1 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_country value = 1 } # First already set by aggressor
	
		random_country = {
			limit = { has_country_flag = alliance_dwarves_men_selected_country }
			FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
			set_country_flag = dynamic_loc_potential_country_target
		}
		
		country_event = 300000 # Country Loc Setting
		
		country_event = 110162 # Hander 4
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no # There shouldn't be any. But just in case
				ai = yes
			}
			country_event = 110169
		}
	}
}

# AI deciding how it votes -- FIRES FOR AI REALMS ONLY, NO NEED TO LOC
country_event = {
	id = 110169
	title = "  Alliance of Dwarves and Men AI Voting Decision"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Calculate Choice"
		
		clr_country_flag = vote_selected
		
		# Highest Tier {
		# Elves and Dwarves won't vote for each other if railroading enabled
		random_country = {
			limit = {
				has_country_flag = alliance_dwarves_men_voting_initiator
				has_global_flag = railroading_enabled
				OR = {
					AND = {
						THIS = { accepted_culture = elven_culture }
						accepted_culture = dwarven_culture
					}
					AND = {
						THIS = { accepted_culture = dwarven_culture }
						accepted_culture = elven_culture
					}
				}
			}
			THIS = {
				clr_country_flag = alliance_dwarves_men_will_agree
				set_country_flag = alliance_dwarves_men_will_disagree
				clr_country_flag = alliance_dwarves_men_will_abstain
				set_country_flag = vote_selected
			}
		}
		
		# Elves and Dwarves won't vote for each other if railroading enabled
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_selected_country
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union }
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union }
				has_global_flag = railroading_enabled
				OR = {
					AND = {
						THIS = { accepted_culture = elven_culture }
						accepted_culture = dwarven_culture
					}
					AND = {
						THIS = { accepted_culture = dwarven_culture }
						accepted_culture = elven_culture
					}
				}
			}
			THIS = {
				set_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
				clr_country_flag = alliance_dwarves_men_will_abstain
				set_country_flag = vote_selected
			}
		}
		
		# GPs and Secondary Powers that are not the voting initiator will always vote against a political union
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
					NOT = { has_country_flag = alliance_dwarves_men_voting_initiator }
					NOT = { has_country_flag = alliance_dwarves_men_selected_country }
					rank = 12
				}
			}
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				set_country_flag = alliance_dwarves_men_will_disagree
				clr_country_flag = alliance_dwarves_men_will_abstain
				set_country_flag = vote_selected
			}
		}
		# }
		
		# High Tier {
		# Voting Initiators will always vote for themselves -- purposefully after the defender check to make sure that unions get voted for
		random_owned = {
			limit = {
				owner = {
					has_country_flag = alliance_dwarves_men_voting_initiator
					NOT = { has_country_flag = vote_selected }
				}
			}
			owner = {
				set_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
				clr_country_flag = alliance_dwarves_men_will_abstain
				set_country_flag = vote_selected
			}
		}
		
		# Voting Defenders will always vote for themselves
		random_owned = {
			limit = {
				owner = {
					has_country_flag = alliance_dwarves_men_selected_country
					NOT = { has_country_flag = vote_selected }
				}
			}
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				set_country_flag = alliance_dwarves_men_will_disagree
				clr_country_flag = alliance_dwarves_men_will_abstain
				set_country_flag = vote_selected
			}
		}
		# }
		
		# Middle Tier {
		# If allied to or spherelord of the initiator
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_voting_initiator
				OR = {
					alliance_with = THIS
					AND = {
						is_sphere_leader_of = THIS
						NOT = { has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted }
					}
				}
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_agree }
		}
		
		# If allied to or spherelord of the defender
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_selected_country
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union }
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union }
				OR = {
					alliance_with = THIS
					AND = {
						is_sphere_leader_of = THIS
						NOT = { has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted }
					}
				}
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_disagree }
		}
		
		# If tied, move onto the next ranking
		random_owned = {
			limit = {
				owner = {
					has_country_flag = alliance_dwarves_men_will_agree
					has_country_flag = alliance_dwarves_men_will_disagree
				}
			}
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_country_flag = alliance_dwarves_men_will_agree
						has_country_flag = alliance_dwarves_men_will_disagree
					}
				}
			}
			owner = { set_country_flag = vote_selected }
		}
		# }
		
		# Low Tier {
		# If the same culture group as the initiator
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_voting_initiator
				is_culture_group = THIS
			}
			random = {
				chance = 25
				THIS = { set_country_flag = alliance_dwarves_men_will_agree }
			}
		}
		
		# If the same culture group as the defender
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_selected_country
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union }
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union }
				is_culture_group = THIS
			}
			random = {
				chance = 25
				THIS = { set_country_flag = alliance_dwarves_men_will_disagree }
			}
			# DO NOT REMOVE THIS RANDOM - IT IS WHAT MAKES THE RESULTS DIFFERENT IN EACH RANDOM BLOCK
			random = { chance = 1 }
		}
		
		# If tied, move onto the next ranking
		random_owned = {
			limit = {
				owner = {
					has_country_flag = alliance_dwarves_men_will_agree
					has_country_flag = alliance_dwarves_men_will_disagree
				}
			}
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_country_flag = alliance_dwarves_men_will_agree
						has_country_flag = alliance_dwarves_men_will_disagree
					}
				}
			}
			owner = { set_country_flag = vote_selected }
		}
		# }
		
		# Lowest Tier {
		# If more than 100 relations with the initiator
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_voting_initiator
				relation = { who = THIS value = 100 }
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_agree }
		}
		
		# If more than 100 relations with the defender
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_selected_country
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union }
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union }
				relation = { who = THIS value = 100 }
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_disagree }
		}
		
		# If less than 0 relations with the initiator
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_voting_initiator
				NOT = { relation = { who = THIS value = 0 } }
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_disagree }
		}
		
		# If less than 0 relations with the defender
		random_country = {
			limit = {
				THIS = { NOT = { has_country_flag = vote_selected } }
				has_country_flag = alliance_dwarves_men_selected_country
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union }
				NOT = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union }
				NOT = { relation = { who = THIS value = 0 } }
			}
			THIS = { set_country_flag = alliance_dwarves_men_will_agree }
		}
		
		# If tied, move onto the next ranking
		random_owned = {
			limit = {
				owner = {
					has_country_flag = alliance_dwarves_men_will_agree
					has_country_flag = alliance_dwarves_men_will_disagree
				}
			}
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_country_flag = alliance_dwarves_men_will_agree
						has_country_flag = alliance_dwarves_men_will_disagree
					}
				}
			}
			owner = { set_country_flag = vote_selected }
		}
		# }
		
		# Finally, abstain if no decision was made
		random_owned = {
			limit = { owner = { NOT = { has_country_flag = vote_selected } } }
			owner = {
				clr_country_flag = alliance_dwarves_men_will_agree
				clr_country_flag = alliance_dwarves_men_will_disagree
				set_country_flag = alliance_dwarves_men_will_abstain
			}
		}
		
		clr_country_flag = vote_selected
	}
}

# Voting Handler 4 -- sets the defender's culture group to dynamic loc slot 3, target region to dynamic loc slot 4 -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110162
	title = "Alliance of Dwarves and Men Voting Handler 4"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Fire Voting"
		
		country_event = { id = 110175 days = 0 } # Voting Loc Setting
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_1
		}
		
		set_variable = { which = dynamic_loc_culture_group_count value = 2 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_culture_group value = 2 } # First two already set by countries
	
		random_country = {
			limit = { has_country_flag = alliance_dwarves_men_selected_country }
			FOR = { change_variable = { which = dynamic_loc_culture_group_count value = 1 } }
			set_country_flag = dynamic_loc_potential_culture_group_target
		}
		
		country_event = 300002 # Culture Group Loc Setting
		
		set_variable = { which = dynamic_loc_region_count value = 4 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_region value = 3 } # First two already set by countries, third set by defender culture group
		
		random_owned = {
			random_neighbor_province = {
				limit = { has_province_modifier = alliance_dwarves_men_selected_region }
				add_province_modifier = { name = dynamic_loc_potential_region_target duration = 1 }
			}
		}
		
		country_event = 300008 # Region Loc Setting
		
		country_event = 110153 # Hander 5 (to make sure that loc shows up correctly)
	}
}

# Voting Handler 5 -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110153
	title = "Alliance of Dwarves and Men Voting Handler 4"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = "Fire Voting"
		
		# Reset the voting count
		set_variable = { which = alliance_dwarves_men_voting_results value = 0 }
		set_variable = { which = alliance_dwarves_men_total_for value = 0 }
		set_variable = { which = alliance_dwarves_men_total_abstained value = 0 }
		set_variable = { which = alliance_dwarves_men_total_against value = 0 }
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no # There shouldn't be any. But just in case
			}
			country_event = 110154
		}
	}
}

# Individual Voting
country_event = {
	id = 110154
	title = "  Alliance of Dwarves and Men Voting"
	desc = ""
	picture = "organizations/alliance_dwarves_men_3"
	
	is_triggered_only = yes
	
	immediate = {
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_4 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_4 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		# alliance_of_dwarves_and_men_voting_on_returning_cores should never go to voting, so no need to handle it here
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			empty_line_loc = {}
			
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_3 = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			dynamic_loc_slot_24 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_25 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_23 = {}
			dynamic_loc_slot_24 = {}
			dynamic_loc_slot_2 = {}
			dynamic_loc_slot_25 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			dynamic_loc_slot_1 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			dynamic_loc_slot_2 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			empty_line_loc = {}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union } }
			end_color_loc = {}
			dynamic_loc_slot_20 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_21 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_22 = {}
			dynamic_loc_slot_1 = {}
			dynamic_loc_slot_23 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_10 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_11 = {}
			empty_line_loc = {}
			
			empty_line_loc = {}
			dynamic_loc_slot_12 = {}
			empty_line_loc = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		# Vote for
		FOR = {
			change_variable = { which = alliance_dwarves_men_voting_results value = 1 }
			change_variable = { which = alliance_dwarves_men_total_for value = 1 }
		}
		set_country_flag = alliance_dwarves_men_voted_for
		
		any_country = {
			limit = {
				ai = no
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { has_country_flag = alliance_dwarves_men_voted_for }
				NOT = { has_country_flag = alliance_dwarves_men_abstained }
				NOT = { has_country_flag = alliance_dwarves_men_voted_against }
			}
			set_global_flag = found_player
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = no
					has_global_flag = hidden_effects
					NOT = { has_global_flag = found_player }
				}
			}
			owner = {
				set_global_flag = found_player
				FOR = { country_event = 110155 } # Calculate the results
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = yes
					NOT = { has_global_flag = found_player }
					has_country_flag = alliance_dwarves_men_voting_initiator
					has_global_flag = hidden_effects
				}
			}
			owner = { FOR = { country_event = 110155 } } # Calculate the results
		}
		
		triggered_event_alliance_of_dwarves_and_men_voting_results_loc = {}
		
		clr_global_flag = found_player
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 33
			modifier = {
				factor = 0
				NOT = { has_country_flag = alliance_dwarves_men_will_agree }
			}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = { change_variable = { which = alliance_dwarves_men_total_abstained value = 1 } }
		set_country_flag = alliance_dwarves_men_abstained
		
		any_country = {
			limit = {
				ai = no
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { has_country_flag = alliance_dwarves_men_voted_for }
				NOT = { has_country_flag = alliance_dwarves_men_abstained }
				NOT = { has_country_flag = alliance_dwarves_men_voted_against }
			}
			set_global_flag = found_player
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = no
					has_global_flag = hidden_effects
					NOT = { has_global_flag = found_player }
				}
			}
			owner = {
				set_global_flag = found_player
				FOR = { country_event = 110155 } # Calculate the results
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = yes
					NOT = { has_global_flag = found_player }
					has_country_flag = alliance_dwarves_men_voting_initiator
					has_global_flag = hidden_effects
				}
			}
			owner = { FOR = { country_event = 110155 } } # Calculate the results
		}
		
		triggered_event_alliance_of_dwarves_and_men_voting_results_loc = {}
		
		clr_global_flag = found_player
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 33
			modifier = {
				factor = 0
				NOT = { has_country_flag = alliance_dwarves_men_will_abstain }
			}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = {
			change_variable = { which = alliance_dwarves_men_voting_results value = -1 }
			change_variable = { which = alliance_dwarves_men_total_against value = 1 }
		}
		set_country_flag = alliance_dwarves_men_voted_against
		
		any_country = {
			limit = {
				ai = no
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { has_country_flag = alliance_dwarves_men_voted_for }
				NOT = { has_country_flag = alliance_dwarves_men_abstained }
				NOT = { has_country_flag = alliance_dwarves_men_voted_against }
			}
			set_global_flag = found_player
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = no
					has_global_flag = hidden_effects
					NOT = { has_global_flag = found_player }
				}
			}
			owner = {
				set_global_flag = found_player
				FOR = { country_event = 110155 } # Calculate the results
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					ai = yes
					NOT = { has_global_flag = found_player }
					has_country_flag = alliance_dwarves_men_voting_initiator
					has_global_flag = hidden_effects
				}
			}
			owner = { FOR = { country_event = 110155 } } # Calculate the results
		}
		
		triggered_event_alliance_of_dwarves_and_men_voting_results_loc = {}
		
		clr_global_flag = found_player
		clr_global_flag = hidden_effects
		
		ai_chance = {
			factor = 33
			modifier = {
				factor = 0
				NOT = { has_country_flag = alliance_dwarves_men_will_disagree }
			}
		}
	}
}

# Calculating Vote 1 -- countries 1 - 8 (for) -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110155
	title = "  Alliance of Dwarves and Men Calculating Vote 1"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_1
			clr_country_flag = dynamic_loc_country_target_2
			clr_country_flag = dynamic_loc_country_target_3
			clr_country_flag = dynamic_loc_country_target_4
			clr_country_flag = dynamic_loc_country_target_5
			clr_country_flag = dynamic_loc_country_target_6
			clr_country_flag = dynamic_loc_country_target_7
			clr_country_flag = dynamic_loc_country_target_8
		}
		
		set_variable = { which = dynamic_loc_country_count value = 0 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_country value = 0 }
	
		any_country = {
			limit = { has_country_flag = alliance_dwarves_men_voted_for }
			FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
			set_country_flag = dynamic_loc_potential_country_target
		}
		
		country_event = 300000 # Country Loc Setting
		
		country_event = 110156 # Calculating Vote 2
	}
}

# Calculating Vote 2 -- countries 9 - 16 (abstain) -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110156
	title = "  Alliance of Dwarves and Men Calculating Vote 2"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_9
			clr_country_flag = dynamic_loc_country_target_10
			clr_country_flag = dynamic_loc_country_target_11
			clr_country_flag = dynamic_loc_country_target_12
			clr_country_flag = dynamic_loc_country_target_13
			clr_country_flag = dynamic_loc_country_target_14
			clr_country_flag = dynamic_loc_country_target_15
			clr_country_flag = dynamic_loc_country_target_16
		}
		
		set_variable = { which = dynamic_loc_country_count value = 8 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_country value = 8 }
	
		any_country = {
			limit = { has_country_flag = alliance_dwarves_men_abstained }
			FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
			set_country_flag = dynamic_loc_potential_country_target
		}
		
		country_event = 300000 # Country Loc Setting
		
		country_event = 110157 # Calculating Vote 3
	}
}

# Calculating Vote 3 -- countries 17 - 24 (against) -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110157
	title = "  Alliance of Dwarves and Men Calculating Vote 3"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		# Clears modifiers on the already selected regions (if the player hits "next", they definitely aren't attempting to choose any of the listed regions)
		# Cannot call 400000 as it will not fire in the necessary order
		any_country = {
			clr_country_flag = dynamic_loc_potential_country_target
			clr_country_flag = dynamic_loc_country_target_17
			clr_country_flag = dynamic_loc_country_target_18
			clr_country_flag = dynamic_loc_country_target_19
			clr_country_flag = dynamic_loc_country_target_20
			clr_country_flag = dynamic_loc_country_target_21
			clr_country_flag = dynamic_loc_country_target_22
			clr_country_flag = dynamic_loc_country_target_23
			clr_country_flag = dynamic_loc_country_target_24
		}
		
		set_variable = { which = dynamic_loc_country_count value = 16 }
		
		# Resets the naming count
		set_variable = { which = dynamic_loc_names_country value = 16 }
	
		any_country = {
			limit = { has_country_flag = alliance_dwarves_men_voted_against }
			FOR = { change_variable = { which = dynamic_loc_country_count value = 1 } }
			set_country_flag = dynamic_loc_potential_country_target
		}
		
		country_event = 300000 # Country Loc Setting
		
		country_event = 110158 # Calculating Vote 4 (to make sure that loc shows up correctly)
	}
}

# Calculating Vote 4 -- description and firing for the player(s) -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110158
	title = "  Alliance of Dwarves and Men Calculating Vote 4"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		dynamic_loc_slot_34 = { state_scope = { change_region_name = "The vote is in! With a vote of" } }
		dynamic_loc_slot_35 = { state_scope = { change_region_name = ", the resolution to" } }
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "resolve conflicting cores" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "return cores" } } }
		}
		# No need to check alliance_of_dwarves_and_men_voting_on_returning_cores -- shouldn't reach voting
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "invite a new realm" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "expand the alliance's cultural reach" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "transfer the Northmen of Dádhrik's Gap" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "transfer Dádhrik's Gap" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "transfer the Northmen of Mountainlands" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "transfer Mountainlands" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "create an economic union" } } }
		}
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union } }
			owner = { dynamic_loc_slot_36 = { state_scope = { change_region_name = "create a political union" } } }
		}
		random_owned = {
			limit = { owner = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
			owner = { dynamic_loc_slot_37 = { state_scope = { change_region_name = "has passed!" } } }
		}
		random_owned = {
			limit = { owner = { NOT = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } } }
			owner = { dynamic_loc_slot_37 = { state_scope = { change_region_name = "has failed!" } } }
		}
		dynamic_loc_slot_38 = { state_scope = { change_region_name = "The following realms voted for the resolution|" } }
		dynamic_loc_slot_39 = { state_scope = { change_region_name = "The following realms voted against the resolution|" } }
		dynamic_loc_slot_40 = { state_scope = { change_region_name = "The following realms abstained|" } }
		dynamic_loc_slot_31 = { state_scope = { change_region_name = "Good" } } # First 24 are taken by countries
		dynamic_loc_slot_32 = { state_scope = { change_region_name = "Drat" } }
		dynamic_loc_slot_33 = { state_scope = { change_region_name = "Okay" } }
		
		any_country = {
			limit = {
				ai = no
				has_country_modifier = alliance_of_dwarves_and_men
			}
			country_event = 110159 # The results
			set_global_flag = found_player
		}
		
		random_country = {
			limit = {
				NOT = { has_global_flag = found_player }
				has_country_modifier = alliance_of_dwarves_and_men
				ai = yes
			}
			country_event = 110159 # The results
		}
		
		clr_global_flag = found_player
	}
}

# Voting Results
country_event = {
	id = 110159
	title = "  Alliance of Dwarves and Men Voting Results"
	desc = ""
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	immediate = {
		end_color_loc = {}
		dynamic_loc_slot_34 = {}
		
		random_owned = {
			limit = { owner = { FOR = { NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 0.9 } } } } }
			zero_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 0.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 1.1 } }
					}
				}
			}
			one_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 1.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 2.1 } }
					}
				}
			}
			two_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 2.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 3.1 } }
					}
				}
			}
			three_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 3.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 4.1 } }
					}
				}
			}
			four_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 4.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 5.1 } }
					}
				}
			}
			five_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 5.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 6.1 } }
					}
				}
			}
			six_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_for value = 6.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_for value = 7.1 } }
					}
				}
			}
			seven_loc = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 7.9 } } } }
			eight_loc = {}
		}
		
		hyphen_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 0.9 } } } } }
			zero_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 0.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 1.1 } }
					}
				}
			}
			one_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 1.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 2.1 } }
					}
				}
			}
			two_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 2.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 3.1 } }
					}
				}
			}
			three_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 3.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 4.1 } }
					}
				}
			}
			four_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 4.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 5.1 } }
					}
				}
			}
			five_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 5.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 6.1 } }
					}
				}
			}
			six_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_against value = 6.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_against value = 7.1 } }
					}
				}
			}
			seven_loc = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 7.9 } } } }
			eight_loc = {}
		}
		
		hyphen_loc = {}
		
		random_owned = {
			limit = { owner = { FOR = { NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 0.9 } } } } }
			zero_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 0.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 1.1 } }
					}
				}
			}
			one_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 1.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 2.1 } }
					}
				}
			}
			two_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 2.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 3.1 } }
					}
				}
			}
			three_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 3.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 4.1 } }
					}
				}
			}
			four_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 4.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 5.1 } }
					}
				}
			}
			five_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 5.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 6.1 } }
					}
				}
			}
			six_loc = {}
		}
		random_owned = {
			limit = {
				owner = {
					FOR = {
						check_variable = { which = alliance_dwarves_men_total_abstained value = 6.9 }
						NOT = { check_variable = { which = alliance_dwarves_men_total_abstained value = 7.1 } }
					}
				}
			}
			seven_loc = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 7.9 } } } }
			eight_loc = {}
		}
		
		dynamic_loc_slot_35 = {}
		dynamic_loc_slot_36 = {}
		dynamic_loc_slot_37 = {}
		empty_line_loc = {}
		
		empty_line_loc = {}
		dynamic_loc_slot_38 = {}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 0.9 } } } }
			dynamic_loc_slot_1 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 1.9 } } } }
			dynamic_loc_slot_2 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 2.9 } } } }
			dynamic_loc_slot_3 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 3.9 } } } }
			dynamic_loc_slot_4 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 4.9 } } } }
			dynamic_loc_slot_5 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 5.9 } } } }
			dynamic_loc_slot_6 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 6.9 } } } }
			dynamic_loc_slot_7 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 7.9 } } } }
			dynamic_loc_slot_8 = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_39 = {}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 0.9 } } } }
			dynamic_loc_slot_17 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 1.9 } } } }
			dynamic_loc_slot_18 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 2.9 } } } }
			dynamic_loc_slot_19 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 3.9 } } } }
			dynamic_loc_slot_20 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 4.9 } } } }
			dynamic_loc_slot_21 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 5.9 } } } }
			dynamic_loc_slot_22 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 6.9 } } } }
			dynamic_loc_slot_23 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 7.9 } } } }
			dynamic_loc_slot_24 = {}
		}
		
		empty_line_loc = {}
		dynamic_loc_slot_40 = {}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 0.9 } } } }
			dynamic_loc_slot_9 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 1.9 } } } }
			dynamic_loc_slot_10 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 2.9 } } } }
			dynamic_loc_slot_11 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 3.9 } } } }
			dynamic_loc_slot_12 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 4.9 } } } }
			dynamic_loc_slot_13 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 5.9 } } } }
			dynamic_loc_slot_14 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 6.9 } } } }
			dynamic_loc_slot_15 = {}
		}
		random_owned = {
			limit = { owner = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 7.9 } } } }
			dynamic_loc_slot_16 = {}
		}
		
		# 3 realms is enough to kick each list into the second line. We only want the extra whitespace when there's only one line
		random_owned = {
			limit = { owner = { NOT = { FOR = { check_variable = { which = alliance_dwarves_men_total_for value = 2.9 } } } } }
			empty_line_loc = {}
		}
		
		# 3 realms is enough to kick each list into the second line. We only want the extra whitespace when there's only one line
		random_owned = {
			limit = { owner = { NOT = { FOR = { check_variable = { which = alliance_dwarves_men_total_abstained value = 2.9 } } } } }
			empty_line_loc = {}
		}
		
		# 3 realms is enough to kick each list into the second line. We only want the extra whitespace when there's only one line
		random_owned = {
			limit = { owner = { NOT = { FOR = { check_variable = { which = alliance_dwarves_men_total_against value = 2.9 } } } } }
			empty_line_loc = {}
		}
		
		# Some proposals are short enough to stay on one line
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
						has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
					}
				}
			}
			empty_line_loc = {}
		}
		
		empty_line_loc = {}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						AND = {
							has_country_flag = alliance_dwarves_men_voted_for
							FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
						}
						AND = {
							has_country_flag = alliance_dwarves_men_voted_against
							NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
						}
					}
				}
			}
			dynamic_loc_slot_31 = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						AND = {
							has_country_flag = alliance_dwarves_men_voted_for
							NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
						}
						AND = {
							has_country_flag = alliance_dwarves_men_voted_against
							FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
						}
					}
				}
			}
			dynamic_loc_slot_32 = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					NOT = { has_country_flag = alliance_dwarves_men_voted_for }
					NOT = { has_country_flag = alliance_dwarves_men_voted_against }
				}
			}
			dynamic_loc_slot_33 = {}
		}
	}
	
	option = {
		name = ""
		
		set_global_flag = hidden_effects
		
		FOR = { country_event = { id = 110110 days = 2 } } # Alliance of Dwarves and Men Cleanup
		FOR = { country_event = { id = 402001 days = 0 } } # Dynamic Loc Cleanup
		
		# Resolve Conflicting Cores {
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			
			# Winner gets the land
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_voting_initiator }
					country_event = { id = 110164 days = 1 }
				}
			}
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_voting_initiator } }
					owner = { country_event = { id = 110164 days = 1 } }
				}
			}
			
			# Loser loses cores
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_selected_country }
					country_event = { id = 110165 days = 0 }
				}
			}
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_selected_country } }
					owner = { country_event = { id = 110165 days = 0 } }
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } } }
				}
			}
			
			# Winner gets the land
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_selected_country }
					country_event = { id = 110164 days = 1 }
				}
			}
			
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_selected_country } }
					owner = { country_event = { id = 110164 days = 1 } }
				}
			}
			
			# Loser loses cores
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_voting_initiator }
					country_event = { id = 110165 days = 0 }
				}
			}
			
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_voting_initiator } }
					owner = { country_event = { id = 110165 days = 0 } }
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
				}
			}
			owner = {
				FOR = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = alliance_dwarves_men_selected_region }
							add_province_modifier = { name = alliance_dwarves_men_diplomacy_stalled duration = 3650 }
						}
					}
				}
			}
		}
		# }
		
		# Request Return of Cores {
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			
			# Winner gets the land
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_voting_initiator }
					country_event = { id = 110164 days = 1 }
				}
			}
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_voting_initiator } }
					owner = { country_event = { id = 110164 days = 1 } }
				}
			}
			
			# The defender doesn't have a care
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } } }
				}
			}
			
			# The defender already owns the province
			
			# Loser loses cores
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_voting_initiator }
					country_event = { id = 110165 days = 0 }
				}
			}
			
			
			# random_country doesn't target the current country
			owner = {
				random_owned = {
					limit = { owner = { has_country_flag = alliance_dwarves_men_voting_initiator } }
					owner = { country_event = { id = 110165 days = 0 } }
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
				}
			}
			owner = {
				FOR = {
					random_owned = {
						any_neighbor_province = {
							limit = { has_province_modifier = alliance_dwarves_men_selected_region }
							add_province_modifier = { name = alliance_dwarves_men_diplomacy_stalled duration = 3650 }
						}
					}
				}
			}
		}
		# }
		
		# alliance_of_dwarves_and_men_voting_on_returning_cores should never go to voting, so no need to handle it here
		
		# Specific Flavor -- Dádhrik's Gap/Mountainlands Population Transfer {
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
					}
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer } }
					owner = {
						ERE_657 = { # Dádhrik's Gap
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer } }
					owner = {
						ERE_660 = { # Mountainlands
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
			}
			owner = {
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_voting_initiator
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
						has_global_flag = hidden_effects
					}
					country_event = 110044
				}
				# random_country doesn't cover THIS
				random_owned = {
					limit = {
						owner = {
							has_country_flag = alliance_dwarves_men_voting_initiator
							has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
							has_global_flag = hidden_effects
						}
					}
					owner = { country_event = 110044 }
				}
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_voting_initiator
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
						has_global_flag = hidden_effects
					}
					country_event = 110045
				}
				# random_country doesn't cover THIS
				random_owned = {
					limit = {
						owner = {
							has_country_flag = alliance_dwarves_men_voting_initiator
							has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
							has_global_flag = hidden_effects
						}
					}
					owner = { country_event = 110045 }
				}
			}
			triggered_event_alliance_of_dwarves_and_men_specific_flavor_northan_core_dispute_loc = {}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
					}
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer } }
					owner = {
						ERE_657 = { # Dádhrik's Gap
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer } }
					owner = {
						ERE_660 = { # Mountainlands
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer
					}
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
				}
			}
			owner = {
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						has_global_flag = hidden_effects
					}
					any_owned = {
						limit = { has_province_modifier = alliance_dwarves_men_selected_region }
						add_province_modifier = { name = alliance_dwarves_men_diplomacy_stalled duration = 3650 }
					}
				}
			}
		}
		# }
		
		# Specific Flavor -- Dádhrik's Gap/Mountainlands Land Transfer {
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
					}
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = { country_event = 110167 }
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
					}
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer } }
					owner = {
						ERE_657 = { # Dádhrik's Gap
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
				random_owned = {
					limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer } }
					owner = {
						ERE_660 = { # Mountainlands
							remove_core = DAL
							remove_core = RHO
							remove_core = GRA
							remove_core = ADH
						}
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
						has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
					}
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = -0.1 } }
					NOT = { FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } } }
				}
			}
			owner = {
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						has_global_flag = hidden_effects
					}
					any_owned = {
						limit = { has_province_modifier = alliance_dwarves_men_selected_region }
						add_province_modifier = { name = alliance_dwarves_men_diplomacy_stalled duration = 3650 }
					}
				}
			}
		}
		# }
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = {
				random_country = {
					limit = { has_country_flag = alliance_dwarves_men_selected_country }
					country_event = 110163
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = {
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						is_culture_group = teleri
					}
					country_event = 110163
					set_global_flag = alliance_of_dwarves_and_men_accept_teleri
				}
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						is_culture_group = avari
					}
					country_event = 110163
					set_global_flag = alliance_of_dwarves_and_men_accept_avari
				}
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						is_culture_group = anduinrim
					}
					country_event = 110163
					set_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
				}
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						is_culture_group = rohirrim
					}
					country_event = 110163
					set_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
				}
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_selected_country
						is_culture_group = hobbits
					}
					country_event = 110163
					set_global_flag = alliance_of_dwarves_and_men_accept_hobbits
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = {
				random_owned = {
					limit = { owner = { has_global_flag = hidden_effects } }
					owner = {
						set_global_flag = alliance_of_dwarves_and_men_economic_union_enacted
						any_country = {
							limit = {
								has_country_modifier = alliance_of_dwarves_and_men
								is_greater_power = no
							}
							sphere_owner = { diplomatic_influence = { who = THIS value = -200 } }
							country_event = 110160
						}
						random_owned = {
							limit = { owner = { is_greater_power = no } }
							owner = {
								sphere_owner = { diplomatic_influence = { who = THIS value = -200 } }
								country_event = 110160
							}
						}
					}
				}
				any_country = {
					limit = {
						has_country_modifier = alliance_of_dwarves_and_men
						is_greater_power = no
					}
					triggered_event_alliance_of_dwarves_and_men_economic_union_loc = {}
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
					FOR = { check_variable = { which = alliance_dwarves_men_voting_results value = 0.1 } }
				}
			}
			owner = {
				random_country = {
					limit = {
						has_country_flag = alliance_dwarves_men_voting_initiator
						has_global_flag = hidden_effects
					}
					country_event = 110168
				}
				random_owned = {
					limit = {
						owner = {
							has_country_flag = alliance_dwarves_men_voting_initiator
							has_global_flag = hidden_effects
						}
					}
					owner = { country_event = 110168 }
				}
			}
			triggered_event_alliance_of_dwarves_and_men_political_union_loc = {}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Removing from sphere (Economic Union successful)
country_event = {
	id = 110160
	title = "  Alliance of Dwarves and Men Economic Union"
	desc = "EVTDESC110160"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "The Economic Union Demands it"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = { owner = { has_global_flag = hidden_effects } }
			owner = {
				random_country = {
					limit = {
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						is_culture_group = THIS
						rank = 1
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						is_culture_group = THIS
						NOT = { rank = 1 }
						rank = 2
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						is_culture_group = THIS
						NOT = { rank = 2 }
						rank = 3
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						is_culture_group = THIS
						NOT = { rank = 3 }
						rank = 4
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				# Just in case there's a GP on the outs
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						is_culture_group = THIS
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						rank = 1
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						NOT = { rank = 1 }
						rank = 2
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						NOT = { rank = 2 }
						rank = 3
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
						NOT = { rank = 3 }
						rank = 4
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
				
				# Just in case there's a GP on the outs
				random_country = {
					limit = {
						THIS = { part_of_sphere = no }
						is_greater_power = yes
						has_country_modifier = alliance_of_dwarves_and_men
					}
					diplomatic_influence = { who = THIS value = 400 }
				}
			}
		}
		
		alliance_of_dwarves_and_men_economic_union_sphere_loc = {}
		
		clr_global_flag = hidden_effects
	}
}

# 110161 and 110162 used above. DO NOT USE AGAIN

# Invitation to the Alliance
country_event = {
	id = 110163
	title = "  An Invitation to the Alliance of Dwarves and Men"
	desc = "EVTDESC110163"
	picture = "organizations/alliance_dwarves_men_2"
	
	is_triggered_only = yes
	
	option = {
		name = "Yes, we accept"
		add_country_modifier = { name = alliance_of_dwarves_and_men duration = -1 }
		
		ai_chance = { factor = 100 }
	}
	
	option = {
		name = "No, we are strong on our own"
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
		
		ai_chance = { factor = 0 }
	}
}

# Voting over Region -- Victory
country_event = {
	id = 110164
	title = "  Alliance of Dwarves and Men Voting Results - Victory"
	desc = "EVTDESC110164"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "Huzzah!"
		
		FOR = {
			random_owned = {
				any_neighbor_province = {
					limit = { has_province_modifier = alliance_dwarves_men_selected_region }
					secede_province = THIS
				}
			}
		}
	}
}

# Voting over Region -- Defeat
country_event = {
	id = 110165
	title = "  Alliance of Dwarves and Men Voting Results - Defeat"
	desc = "EVTDESC110165"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "Damn!"
		
		FOR = {
			random_owned = {
				any_neighbor_province = {
					limit = { has_province_modifier = alliance_dwarves_men_selected_region }
					remove_core = THIS
				}
			}
		}
	}
}

# Release Cores (voluntarily)
country_event = {
	id = 110166
	title = "  Alliance of Dwarves and Men - Release Cores"
	desc = "EVTDESC100166"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "Good"
		
		all_core = {
			limit = { has_province_modifier = alliance_dwarves_men_selected_region }
			secede_province = THIS
		}
	}
}

# Northmen Core Dispute -- Northmen Victory
country_event = {
	id = 110167
	title = "  Alliance of Dwarves and Men - Victory"
	desc = "EVTDESC110167"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "Huzzah!"
		
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer
				}
			}
			owner = {
				ERE_657 = { # Dádhrik's Gap
					secede_province = THIS
					add_core = THIS
					remove_core = ERE # Given that it's setup for Erebor to be the only potential target...
				}
			}
		}
		
		random_owned = {
			limit = {
				owner = {
					has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer
				}
			}
			owner = {
				ERE_657 = { # Dádhrik's Gap
					secede_province = THIS
					add_core = THIS
					remove_core = ERE # Given that it's setup for Erebor to be the only potential target...
				}
			}
		}
		
		# Doing this outside the random_country in case somehow one of the provinces in the region is not owned by the same owner
		FOR = {
			random_owned = {
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_657 # Dádhrik's Gap
						owner = { has_global_flag = hidden_effects }
					}
					owner = { set_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
				}
				random_neighbor_province = {
					limit = {
						has_province_modifier = alliance_dwarves_men_selected_region
						region = ERE_660 # Mountainlands
						owner = { has_global_flag = hidden_effects }
					}
					owner = { set_global_flag = alliance_of_dwarves_and_men_settled_mountainlands }
				}
			}
		}
		
		clr_global_flag = hidden_effects
	}
}

# Political Union
country_event = {
	id = 110168
	title = "  Alliance of Dwarves and Men Political Union"
	desc = "EVTDESC110168"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "A new day begins. For the Free Peoples of the North!"
		
		any_country = {
			limit = { has_country_flag = alliance_dwarves_men_voted_for }
			all_core = { add_core = THIS }
			annex_to = THIS
		}
		
		any_country = {
			limit = {
				exists = yes
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { has_country_flag = alliance_dwarves_men_voted_for }
			}
			country_event = 110172
		}
		
		change_tag = FFN
		
		# Northmen and Dwarves are accepted by the alliance by default
		
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = longbeard
						accepted_culture = longbeard
					}
				}
			}
			owner = { add_accepted_culture = longbeard }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = ironfist
						accepted_culture = ironfist
					}
				}
			}
			owner = { add_accepted_culture = ironfist }
		}
		
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = barding
						accepted_culture = barding
					}
				}
			}
			owner = { add_accepted_culture = barding }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = aivathiuda
						accepted_culture = aivathiuda
					}
				}
			}
			owner = { add_accepted_culture = aivathiuda }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = anthar
						accepted_culture = anthar
					}
				}
			}
			owner = { add_accepted_culture = anthar }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = gadraught
						accepted_culture = gadraught
					}
				}
			}
			owner = { add_accepted_culture = gadraught }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = dorwinrim
						accepted_culture = dorwinrim
					}
				}
			}
			owner = { add_accepted_culture = dorwinrim }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = grammas
						accepted_culture = grammas
					}
				}
			}
			owner = { add_accepted_culture = grammas }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = rivermen
						accepted_culture = rivermen
					}
				}
			}
			owner = { add_accepted_culture = rivermen }
		}
		random_owned = {
			limit = {
				owner = {
					NOT = {
						primary_culture = adhalling
						accepted_culture = adhalling
					}
				}
			}
			owner = { add_accepted_culture = adhalling }
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = silvan
								accepted_culture = silvan
							}
						}
					}
					owner = { add_accepted_culture = silvan }
				}
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = galadhrim
								accepted_culture = galadhrim
							}
						}
					}
					owner = { add_accepted_culture = galadhrim }
				}
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_avari } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = avari
								accepted_culture = avari
							}
						}
					}
					owner = { add_accepted_culture = avari }
				}
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = stoor
								accepted_culture = stoor
							}
						}
					}
					owner = { add_accepted_culture = stoor }
				}
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = woodsmen
								accepted_culture = woodsmen
							}
						}
					}
					owner = { add_accepted_culture = woodsmen }
				}
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = beorning
								accepted_culture = beorning
							}
						}
					}
					owner = { add_accepted_culture = beorning }
				}
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = beiabarnae
								accepted_culture = beiabarnae
							}
						}
					}
					owner = { add_accepted_culture = beiabarnae }
				}
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = melburgi
								accepted_culture = melburgi
							}
						}
					}
					owner = { add_accepted_culture = melburgi }
				}
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = herimundi
								accepted_culture = herimundi
							}
						}
					}
					owner = { add_accepted_culture = herimundi }
				}
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim } }
			owner = {
				random_owned = {
					limit = {
						owner = {
							NOT = {
								primary_culture = anduinmen
								accepted_culture = anduinmen
							}
						}
					}
					owner = { add_accepted_culture = anduinmen }
				}
			}
		}
	}
}

# 110169 used above. DO NOT USE AGAIN

# Leaving the Alliance
country_event = {
	id = 110170
	title = "  Leaving the Alliance of Dwarves and Men"
	desc = "EVTDESC110170"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "When one door closes, another opens"
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no
			}
			casus_belli = {
				target = THIS
				type = humiliate
				months = 60
			}
			casus_belli = {
				target = THIS
				type = cut_down_to_size
				months = 60
			}
		}
		
		remove_country_modifier = alliance_of_dwarves_and_men
		
		any_country = {
			limit = { vassal_of = THIS } # There shouldn't be any. But just in case
			remove_country_modifier = alliance_of_dwarves_and_men
		}
		
		# Clear out any sort of voting modifiers
		any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
		clr_country_flag = alliance_dwarves_men_selected_country
		clr_country_flag = alliance_dwarves_men_voting_initiator
		
		# Prevents rejoining for 10 years
		add_country_modifier = { name = alliance_of_dwarves_and_men_cannot_join duration = 3650 }
	}
}

# Collapse of the Alliance
country_event = {
	id = 110171
	title = "  The Collapse of the Alliance of Dwarves and Men"
	desc = "EVTDESC110171"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "and into the history books it goes"
		
		random_owned = {
			limit = { owner = { has_country_modifier = alliance_of_dwarves_and_men } }
			owner = {
				remove_country_modifier = alliance_of_dwarves_and_men
				any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
				clr_country_flag = alliance_dwarves_men_selected_country
				clr_country_flag = alliance_dwarves_men_voting_initiator
			}
		}
	}
}

# End of the Alliance (Because of the political union, which the realm voted against or abstained)
country_event = {
	id = 110172
	title = "  The End of the Alliance of Dwarves and Men"
	desc = "EVTDESC110172"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "and into the history books it goes"
		
		remove_country_modifier = alliance_of_dwarves_and_men
		any_owned = { remove_province_modifier = alliance_dwarves_men_selected_region }
		clr_country_flag = alliance_dwarves_men_selected_country
		clr_country_flag = alliance_dwarves_men_voting_initiator
		set_country_flag = FFN_can_target
		
		random_owned = {
			limit = { owner = { has_country_flag = alliance_dwarves_men_voted_against } }
			owner = { set_country_flag = voted_against_FFN_formation }
		}
		
		random_owned = {
			limit = { owner = { has_country_flag = alliance_dwarves_men_abstained } }
			owner = { set_country_flag = abstained_FFN_formation }
		}
	}
}

# Description Localisation Setting -- FIRES FOR FOR, NO NEED TO LOC
country_event = {
	id = 110175
	title = "Alliance of Dwarves and Men Localisation Setter"
	desc = ""
	picture = "organizations/alliance_dwarves_men"
	
	is_triggered_only = yes
	
	# Voting Initiator -- slot 1
	# Voting "defender" -- slot 2
	# Voting "defender" culture group -- slot 3
	# Target region -- slot 4
	# Options -- slots 10, 11, 12
	# Other Description -- slots 20+
	option = {
		name = "Set loc"
		
		dynamic_loc_slot_20 = { state_scope = { change_region_name = "After many days of deliberation, the time to vote has come. The" } }
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed resolving their conflicting cores with the" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "over the region of" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThe winning side will take control of the region, and the losing side will lose their cores§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will side with" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will side with" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_requesting_return_of_cores } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has requested the return of" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "from" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThe winning side will take control of the region. If the voting initiator loses this vote, they will lose cores on the region§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will side with" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will side with" } }
			}
		}
		
		# alliance_of_dwarves_and_men_voting_on_returning_cores should never go to voting, so no need to handle it here
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed inviting the" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "§MThis will invite the" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "to the alliance. Assuming they accept, they will become full alliance members, being able to vote in all issues.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "There is strength in unity" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "No. Inviting a new realm will only weaken the alliance" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed expanding our cultural reach by inviting the" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "§MThis will add the" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "culture group to the list of the Alliance's accepted culture groups, allowing us to more easily invite realms within the culture group.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "There is strength in unity" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "No. Extending the cultural reach will only weaken the alliance" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_population_transfer } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed transferring the population of Dádhrik's Gap from" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "to" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThis will transfer Northmen pops from Dádhrik's Gap to Dalelands.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will support" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will support" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_dadhriks_gap_land_transfer } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed transferring Dádhrik's Gap from" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "to" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThis will transfer all provinces of Dádhrik's Gap from§!" } }
				dynamic_loc_slot_24 = { state_scope = { change_region_name = "§Mowned by§!" } }
				dynamic_loc_slot_25 = { state_scope = { change_region_name = "§Mto§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will support" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will support" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_population_transfer } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed transferring the population of Mountainlands from" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "to" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThis will transfer Northmen pops from Mountainlands to Medes.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will support" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will support" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_specific_flavor_mountainlands_land_transfer } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed transferring Mountainlands from" } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "to" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MThis will transfer all provinces of Mountainlands§!" } }
				dynamic_loc_slot_24 = { state_scope = { change_region_name = "§Mowned by§!" } }
				dynamic_loc_slot_25 = { state_scope = { change_region_name = "§Mto§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "We will support" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "We will support" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed an economic union." } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "§MThis will lock all alliance members into the sphere of the GPs within the alliance. If there are multiple GPs, alliance members will prefer to be in the sphere of a realm of their culture group.§!" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "§MIf there are any ties, rank will be the deciding factor.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "An economic union can only bring prosperity for all" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "This is clearly a play at gaining power over us" } }
			}
		}
		
		random_owned = {
			limit = { owner = { has_global_flag = alliance_of_dwarves_and_men_voting_on_political_union } }
			owner = {
				dynamic_loc_slot_21 = { state_scope = { change_region_name = "has proposed a political union." } }
				dynamic_loc_slot_22 = { state_scope = { change_region_name = "§M" } }
				dynamic_loc_slot_23 = { state_scope = { change_region_name = "will become the Free Folk of the North, annexing all members of the alliance that vote for the union. They will still gain cores over any realm that abstained or voted against it.§!" } }
				dynamic_loc_slot_10 = { state_scope = { change_region_name = "A political union can only bring prosperity for all" } } # First two slots taken up by countries. Third taken up by culture group
				dynamic_loc_slot_11 = { state_scope = { change_region_name = "We will abstain" } }
				dynamic_loc_slot_12 = { state_scope = { change_region_name = "This is clearly a play at gaining power over us" } }
			}
		}
	}
}

# AI Call to Arms -- FIRES FOR AI, NO NEED TO LOC
country_event = {
	id = 110176
	title = "Alliance of Dwarves and Men AI Call to Arms"
	desc = ""
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		any_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				is_vassal = no # There shouldn't be any. But just in case
				NOT = { tag = THIS }
			}
			create_alliance = THIS
			relation = { who = THIS value = 400 }
		}
		
		FOR = { country_event = 110101 }
	}
}

# AI Calling the various options -- FIRES FOR AI, NO NEED TO LOC
country_event = {
	id = 110177
	title = "Alliance of Dwarves and Men Fire Options"
	desc = ""
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = ""
		
		set_country_flag = alliance_dwarves_men_attempted_voting_selection
		
		# Calling to Arms
		random_owned = {
			limit = {
				owner = {
					war = yes
					NOT = { has_country_modifier = call_to_arms_cooldown }
					FOR = {
						any_neighbor_country = {
							has_country_modifier = alliance_of_dwarves_and_men
							war = no
							is_vassal = no # There shouldn't be any. But just in case
						}
					}
				}
			}
			owner = { country_event = 110176 }
		}
		
		# Resolve Conflicting Cores
		random_owned = {
			limit = {
				owner = {
					NOT = { has_global_flag = alliance_dwarves_men_ai_make_voting_selection } # To prevent the ai choosing to vote on multiple things during the same tick
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
				}
				is_core = THIS
				any_core = {
					NOT = { tag = THIS }
					has_country_modifier = alliance_of_dwarves_and_men
				}
			}
			owner = {
				set_country_flag = alliance_dwarves_men_voting_initiator
				set_global_flag = alliance_dwarves_men_ai_make_voting_selection
				random_owned = {
					limit = {
						is_core = THIS
						any_core = {
							NOT = { tag = THIS }
							has_country_modifier = alliance_of_dwarves_and_men
						}
					}
					add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 }
				}
				random_country = {
					limit = {
						has_country_modifier = alliance_of_dwarves_and_men
						any_core = { has_province_modifier = alliance_dwarves_men_selected_region }
					}
					set_country_flag = alliance_dwarves_men_selected_country
				}
				FOR = {
					set_global_flag = alliance_of_dwarves_and_men_voting_on_resolving_conflicting_cores
					country_event = 110150 # Voting Handler
				}
			}
		}
		
		# Request Return of Cores will be handled by Return Cores -- no need to have the AI fire it. There will be the scenario where the player will own ai land, but it will likely be more annoying to the player than immersive
		
		# Return Cores
		random_owned = {
			limit = {
				NOT = { is_core = THIS }
				NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
				any_core = {
					exists = yes
					has_country_modifier = alliance_of_dwarves_and_men
				}
				any_neighbor_province = {
					empty = no
					owner = { has_country_modifier = alliance_of_dwarves_and_men }
				}
			}
			add_province_modifier = { name = ai_return_cores_alliance_men_dwarves duration = 1 }
			owner = {
				random_country = {
					limit = {
						has_country_modifier = alliance_of_dwarves_and_men
						exists = yes
						any_core = { has_province_modifier = ai_return_cores_alliance_men_dwarves }
					}
					country_event = 110178
				}
			}
		}
		
		# Invite Realm
		random_owned = {
			limit = {
				owner = {
					NOT = { has_global_flag = alliance_dwarves_men_ai_make_voting_selection } # To prevent the ai choosing to vote on multiple things during the same tick
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					FOR = {
						any_neighbor_country = {
							capital_scope = { continent = europe } # Rhovanion
							NOT = { has_country_modifier = alliance_of_dwarves_and_men }
							NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
							alliance_with = THIS
							war = no
							is_vassal = no
							OR = {
								good_evil_alignment = good_alignment
								good_evil_alignment = neutral_alignment
							}
							OR = {
								is_culture_group = dwarves
								is_culture_group = northmen
								AND = {
									is_culture_group = teleri
									has_global_flag = alliance_of_dwarves_and_men_accept_teleri
								}
								AND = {
									is_culture_group = avari
									has_global_flag = alliance_of_dwarves_and_men_accept_avari
								}
								AND = {
									is_culture_group = anduinrim
									has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
								}
								AND = {
									is_culture_group = rohirrim
									has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
								}
								AND = {
									is_culture_group = hobbits
									has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
								}
							}
						}
					}
				}
			}
			owner = {
				random_country = {
					limit = {
						capital_scope = { continent = europe } # Rhovanion
						NOT = { has_country_modifier = alliance_of_dwarves_and_men }
						NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
						alliance_with = THIS
						war = no
						is_vassal = no
						OR = {
							good_evil_alignment = good_alignment
							good_evil_alignment = neutral_alignment
						}
						OR = {
							is_culture_group = dwarves
							is_culture_group = northmen
							AND = {
								is_culture_group = teleri
								has_global_flag = alliance_of_dwarves_and_men_accept_teleri
							}
							AND = {
								is_culture_group = avari
								has_global_flag = alliance_of_dwarves_and_men_accept_avari
							}
							AND = {
								is_culture_group = anduinrim
								has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim
							}
							AND = {
								is_culture_group = rohirrim
								has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim
							}
							AND = {
								is_culture_group = hobbits
								has_global_flag = alliance_of_dwarves_and_men_accept_hobbits
							}
						}
					}
					set_country_flag = dynamic_loc_country_target_1
					THIS = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_invite_realm
						set_global_flag = alliance_of_dwarves_and_men_voting_on_invite_realm
						country_event = 110030
					}
					set_global_flag = alliance_dwarves_men_ai_make_voting_selection
				}
			}
		}
		
		# Expand Cultural Union
		random_owned = {
			limit = {
				owner = {
					NOT = { has_global_flag = alliance_dwarves_men_ai_make_voting_selection } # To prevent the ai choosing to vote on multiple things during the same tick
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					FOR = {
						any_neighbor_country = {
							rank = 12 # Great or Secondary power
							capital_scope = { continent = europe } # Rhovanion
							NOT = { has_country_modifier = alliance_of_dwarves_and_men }
							NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
							alliance_with = THIS
							war = no
							is_vassal = no
							OR = {
								AND = {
									is_culture_group = teleri
									NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
								}
								AND = {
									is_culture_group = avari
									NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
								}
								AND = {
									is_culture_group = anduinrim
									NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
								}
								AND = {
									is_culture_group = rohirrim
									NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
								}
								AND = {
									is_culture_group = hobbits
									NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
								}
							}
						}
					}
				}
			}
			owner = {
				random_country = {
					limit = {
						rank = 12 # Great or Secondary power
						capital_scope = { continent = europe } # Rhovanion
						NOT = { has_country_modifier = alliance_of_dwarves_and_men }
						NOT = { has_country_modifier = alliance_of_dwarves_and_men_cannot_join }
						alliance_with = THIS
						war = no
						is_vassal = no
						OR = {
							AND = {
								is_culture_group = teleri
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_teleri }
							}
							AND = {
								is_culture_group = avari
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_avari }
							}
							AND = {
								is_culture_group = anduinrim
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_anduinrim }
							}
							AND = {
								is_culture_group = rohirrim
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_rohirrim }
							}
							AND = {
								is_culture_group = hobbits
								NOT = { has_global_flag = alliance_of_dwarves_and_men_accept_hobbits }
							}
						}
					}
					set_country_flag = dynamic_loc_country_target_1
					THIS = {
						set_country_flag = alliance_dwarves_men_voting_initiator
						set_global_flag = alliances_of_dwarves_and_men_expand_cultural_reach
						set_global_flag = alliance_of_dwarves_and_men_voting_on_expand_cultural_reach
						country_event = 110030
					}
					set_global_flag = alliance_dwarves_men_ai_make_voting_selection
				}
			}
		}
		
		# Settle the Cores of Dádhrik's Gap
		random_owned = {
			limit = {
				owner = {
					# No checks about ensuring only one vote at a time. The AI will only select a non-voting option
					OR = {
						has_country_flag = DAL_content
						tag = RHO
					}
					ERE = { has_country_modifier = alliance_of_dwarves_and_men }
					OR = {
						primary_culture = adhalling
						accepted_culture = adhalling
					}
					ERE_657 = { # Dádhrik's Gap
						owned_by = ERE
						NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
					}
					NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_dadhriks_gap }
				}
			}
			owner = {
				ERE_657 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Dádhrik's Gap
				country_event = 110042
			}
		}
		
		# Settle the Cores of Mountainlands
		random_owned = {
			limit = {
				owner = {
					# No checks about ensuring only one vote at a time. The AI will only select a non-voting option
					OR = {
						has_country_flag = DAL_content
						tag = RHO
					}
					ERE = { has_country_modifier = alliance_of_dwarves_and_men }
					OR = {
						primary_culture = grammas
						accepted_culture = grammas
					}
					ERE_660 = { # Mountainlands
						owned_by = ERE
						NOT = { has_province_modifier = alliance_dwarves_men_diplomacy_stalled }
					}
					NOT = { has_global_flag = alliance_of_dwarves_and_men_settled_mountainlands }
				}
			}
			owner = {
				ERE_660 = { add_province_modifier = { name = alliance_dwarves_men_selected_region duration = -1 } } # Mountainlands
				country_event = 110042
			}
		}
		
		# Economic Union
		random_owned = {
			limit = {
				owner = {
					NOT = { has_global_flag = alliance_dwarves_men_ai_make_voting_selection } # To prevent the ai choosing to vote on multiple things during the same tick
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					is_greater_power = yes
					NOT = { has_country_modifier = alliance_of_dwarves_and_men_union_countdown }
					NOT = { has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted }
					year = 2960 # Erebor won't stay as a GP at the start. Making sure that it's a GP that's earned their way into the position
				}
			}
			owner = {
				set_country_flag = alliance_dwarves_men_voting_initiator
				set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
				FOR = {
					set_global_flag = alliance_of_dwarves_and_men_voting_on_economic_union
					country_event = 110150 # Voting Handler
				}
				set_global_flag = alliance_dwarves_men_ai_make_voting_selection
			}
		}
		
		# Political Union
		random_owned = {
			limit = {
				owner = {
					NOT = { has_global_flag = alliance_dwarves_men_ai_make_voting_selection } # To prevent the ai choosing to vote on multiple things during the same tick
					NOT = { FOR = { has_country_modifier = alliance_of_dwarves_and_men_recently_voted } } # Only want to have the potential for one voting resolution at once
					is_greater_power = yes
					NOT = { has_global_flag = railroading_enabled }
					NOT = { has_country_modifier = alliance_of_dwarves_and_men_union_countdown }
					has_global_flag = alliance_of_dwarves_and_men_economic_union_enacted
					diplomacy_5 = 1
				}
			}
			owner = {
				set_country_flag = alliance_dwarves_men_voting_initiator
				set_country_flag = alliance_dwarves_men_selected_country # The initiator is the "defender" in order to get the loc right
				FOR = {
					set_global_flag = alliance_of_dwarves_and_men_voting_on_political_union
					country_event = 110150 # Voting Handler
				}
				set_global_flag = alliance_dwarves_men_ai_make_voting_selection
			}
		}
		
		# Recursively fire event for every country in the alliance, one at a time, until there are no more countries
		random_country = {
			limit = {
				has_country_modifier = alliance_of_dwarves_and_men
				NOT = { has_country_flag = alliance_dwarves_men_attempted_voting_selection }
				ai = yes
			}
			country_event = 110177
		}
	}
}

# Core Returned
country_event = {
	id = 110178
	title = "  Alliance of Dwarves and Men Returned Cores"
	desc = "EVTDESC110178"
	picture = "organizations/alliance_dwarves_men_1"
	
	is_triggered_only = yes
	
	option = {
		name = "A Toast to Friends!"
		
		FROM = {
			random_owned = {
				limit = { has_province_modifier = ai_return_cores_alliance_men_dwarves }
				state_scope = {
					any_owned = {
						limit = { is_core = THIS }
						secede_province = THIS
					}
				}
			}
		}
	}
}
