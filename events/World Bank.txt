# Remove this line to have the validator check for strings in localisation
# Audax Validator "!" Ignore_1004

# World Bank Events: {
# 99000 - 99799 }

# Flavor Cleanup
country_event = {
	id = 99001
	picture = "production"
	title = "DAL Flavor Cleanup"
	desc = "EVTDESC99001"
	
	is_triggered_only = yes
	
	option = {
		name = "Fix it please"
		
		# Building Mere's End Boat Life {
		random_country = { # Boat lift started building, then province switched hands
			limit = {
				has_global_flag = DAL_meres_end_boat_lift_constructing
				owns = 648
				NOT = { has_global_flag = DAL_meres_end_boat_lift_constructed }
				NOT = { has_country_modifier = meres_end_constructing_boat_lift }
			}
			add_country_modifier = { name = meres_end_constructing_boat_lift duration = -1 }
		}
		random_country = { # Lost the province since it started building or it finished building
			limit = {
				has_global_flag = DAL_meres_end_boat_lift_constructing
				has_country_modifier = meres_end_constructing_boat_lift
				OR = {
					NOT = { owns = 648 }
					has_global_flag = DAL_meres_end_boat_lift_constructed
				}
			}
			remove_country_modifier = meres_end_constructing_boat_lift
		}
		random_owned = { # Finished building, but one of the affected provinces is missing the modifier
			any_neighbor_province = {
				limit = {
					owner = { has_global_flag = DAL_meres_end_boat_lift_constructed }
					OR = {
						province_id = 649
						province_id = 653
						province_id = 654
					}
					NOT = { has_province_modifier = meres_end_increased_trade }
				}
				add_province_modifier = { name = meres_end_increased_trade duration = -1 }
			}
		}
		# }
		
		# Celduin Pirates {
		random_owned = {
			limit = {
				owner = { any_neighbor_country = { has_country_modifier = funding_celduin_pirates } }
			}
			any_neighbor_province = {
				limit = {
					OR = {
						province_id = 140 # Holmgierstadur
						province_id = 526 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 527 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 528 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 530 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 531 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 532 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 537 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 538 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 540 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 543 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 544 # TODO: MAKE SURE TO UPDATE WHEN RHOVANION PROVINCE REWORK HAPPENS
						province_id = 622 # TODO: MAKE SURE TO UPDATE WHEN RHUN PROVINCE REWORK HAPPENS
						province_id = 626 # TODO: MAKE SURE TO UPDATE WHEN RHUN PROVINCE REWORK HAPPENS
						province_id = 628 # TODO: MAKE SURE TO UPDATE WHEN RHUN PROVINCE REWORK HAPPENS
						province_id = 629 # TODO: MAKE SURE TO UPDATE WHEN RHUN PROVINCE REWORK HAPPENS
						province_id = 643 # Naertheiaborg
						province_id = 644 # Myrrborg
						province_id = 645 # Kaupaborg
						province_id = 646 # Iach Celduin
						province_id = 647 # Riverrun
						province_id = 648 # Londaroth
						province_id = 701 # TODO: MAKE SURE TO UPDATE WHEN MIRKWOOD PROVINCE REWORK HAPPENS
						province_id = 702 # TODO: MAKE SURE TO UPDATE WHEN MIRKWOOD PROVINCE REWORK HAPPENS
					}
					NOT = { has_crime = celduin_pirates }
					NOT = { owner = { primary_culture = rivermen } }
				}
				add_crime = celduin_pirates
			}
		}
		
		random_owned = {
			limit = {
				NOT = { owner = { any_neighbor_country = { has_country_modifier = funding_celduin_pirates } } }
			}
			any_neighbor_province = {
				limit = {
					has_crime = celduin_pirates
				}
				add_crime = no_crime
			}
		}
		
		any_country = {
			limit = {
				any_owned_province = { has_crime = celduin_pirates }
				NOT = { has_country_flag = DAL_alerted_about_pirates }
			}
			country_event = 50915
			set_country_flag = DAL_alerted_about_pirates
		}
		# }
		
		# Marsh Wights
		random_owned = {
			any_neighbor_province = {
				limit = {
					OR = {
						has_crime = marsh_wights
						has_crime = hunting_marsh_wights
					}
					OR = {
						owned_by = LMW
						NOT = { is_core = LMW }
					}
				}
				add_crime = no_crime
			}
		}
		
		# Refire the cleanup event next month
		country_event = { id = 99001 days = 30 }
	}
}