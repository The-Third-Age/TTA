# Remove this line to have the validator check for strings in localisation
# Audax Validator "!" Ignore_1004

# Remove this line to have the validator check this file
# Audax Validator "!" Ignore_NEXT

# Has flavor related to tag in Gramavuld -- Barding Realm, the Rivermen minors and the Amov Clan

# Barding Realm Events
# 50900 - 50999

# The Integration of Odriksdun
province_event = {
	id = 50900
	title = "The Integration of Odriksdún"
	desc = "EVTDESC50900"
	
	fire_only_once = yes
	
	trigger = {
		province_id = 652 # Dale
		owner = { has_country_flag = DAL_content }
		650 = { empty = yes } # Odriksdun
	}
	
	mean_time_to_happen = { months = 6 }
	
	option = {
		name = "Another village joins the realm"
		
		650 = { secede_province = THIS } # Odriksdun
	}
}

# Bard's Ultimatum to the Rivermen
country_event = {
	id = 50901
	title = "An Ultimatum From $FROMCOUNTRY$"
	desc = "EVTDESC50901"
	picture = "gramavuld/bard_war"
	
	is_triggered_only = yes
	
	option = {
		name = "We will join"
		
		FROM = { country_event = 50902 }
		any_owned = {
			limit = { is_core = RIV }
			add_core = DAL # To make sure that should DAL fail, they can attempt to do it again
		}
		
		set_country_flag = DAL_accepted_bard_ultimatum
		set_country_flag = RIV_willingly_joined_DAL
		
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0
				OR = {
					tag = DA4 # The current Lord of Naertheiaborg has no interest in joining Dale
					tag = RIV # If United Rivermen has formed, they will NOT be willing to join the Barding Realm
				}
				NOT = { vassal_of = DAL }
				has_global_flag = railroading_enabled
			}
			modifier = {
				factor = 2
				OR = {
					alliance_with = DAL
					in_sphere = DAL
				}
			}
		}
	}
	
	option = {
		name = "To war!"
		
		FROM = { country_event = 50903 }
		any_owned = {
			limit = { is_core = RIV }
			add_core = DAL # To make sure that should DAL fail, they can attempt to do it again
		}
		
		# Actually be able to afford their army (at first)
		treasury = 100000
		
		set_country_flag = rejected_DALs_ultimatum
		
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_global_flag = DAL_protected_the_rivermen
					vassal_of = DAL
					AND = {
						tag = DA1 # Historically Riverrun had close ties with the Lakemen
						has_global_flag = railroading_enabled
					}
				}
			}
		}
	}
}

# The Rivermen Accept
country_event = {
	id = 50902
	title = "$FROMCOUNTRY$ Accepts the Ultimatum"
	desc = "EVTDESC50902"
	picture = "gramavuld/bard_war"
	
	is_triggered_only = yes
	
	option = {
		name = "Welcome to $COUNTRY$!"
		
		create_vassal = FROM
		relation = { who = FROM value = 400 }
		create_alliance = FROM
		
		# If we are a GP, sphere the minor
		random_owned = {
			limit = { owner = { is_greater_power = yes } }
			owner = { diplomatic_influence = { who = FROM value = 400 } }
		}
	}
}

# The Rivermen Refuse
country_event = {
	id = 50903
	title = "$FROMCOUNTRY$ Refuses the Ultimatum"
	desc = "EVTDESC50903"
	picture = "gramavuld/bard_war"
	
	is_triggered_only = yes
	
	option = {
		name = "They made their choice"
		
		casus_belli = {
			target = FROM
			type = conquest
			months = 12
		}
		
		add_casus_belli = {
			target = FROM
			type = humiliate
			months = 12
		}
		
		end_war = FROM
		
		war = {
			target = FROM
			attacker_goal = { casus_belli = conquest }
			defender_goal = { casus_belli = humiliate }
			call_ally = yes
		}
	}
}

# The Integration of the Grammas
province_event = {
	id = 50904
	title = "The Integration of the Grammas"
	desc = "EVTDESC50904"
	
	trigger = {
		province_id = 652 # Dale
		owner = {
			has_country_flag = DAL_content
			has_global_flag = DAL_invited_the_grammas
			
			# Grammas has core provinces that are uncolonized
			GRA = {
				any_core = {
					empty = yes
					OR = {
						region = DAL_643
						region = DAL_642
						region = DAL_640
					}
					any_neighbor_province = { owned_by = THIS }
				}
			}
		}
	}
	
	mean_time_to_happen = { months = 12 }
	
	option = {
		name = "We welcome our brothers"
		
		owner = {
			# Adds a targetting modifier to all eligible provinces
			GRA = {
				all_core = {
					limit = {
						empty = yes
						OR = {
							region = DAL_643
							region = DAL_642
							region = DAL_640
						}
						any_neighbor_province = { owned_by = THIS }
					}
					add_province_modifier = { name = colonization_target duration = -1 }
				}
			}
			
			# Randomly grabs one of the marked provinces and annexes a random neighbor uncolonized core
			FOR = {
				random_owned = {
					random_empty_neighbor_province = {
						limit = { has_province_modifier = colonization_target }
						secede_province = THIS
					}
				}
			}
			
			# Clears the targeting modifiers to clear the path for the next time this event fires
			GRA = { all_core = { remove_province_modifier = colonization_target } }
			
			DAL_colonize_grammas_province_loc = {}
		}
	}
}

# Adding of Smaug's Desolation
country_event = {
	id = 50905
	title = "Smaug's Desolation"
	desc = "EVTDESC50905"
	picture = "Gramavuld/Smaug"
	
	is_triggered_only = yes
	
	option = {
		name = "We must repair the damage"
		
		add_country_modifier = { name = smaugs_desolation_country duration = -1 }
	}
}

# Removal of Smaug's Desolation
country_event = {
	id = 50906
	title = "Reconstruction from Smaug's Desolation"
	desc = "EVTDESC50906"
	picture = "Gramavuld/Smaug"
	
	is_triggered_only = yes
	
	option = {
		name = "Good"
		
		remove_country_modifier = smaugs_desolation_country
	}
}

# Reconstruction from Smaug's Desolation
province_event = {
	id = 50907
	title = "Reconstruction from Smaug's Destruction"
	desc = "EVTDESC50907"
	
	trigger = {
		has_province_modifier = smaugs_desolation
		OR = {
			has_crime = province_wealth_0
			has_crime = province_wealth_1
			has_crime = province_wealth_2
			has_crime = province_wealth_3
			has_crime = province_wealth_4
			has_crime = province_wealth_5
		}
	}
	
	option = {
		name = "We are removing a stain from the land and memory"
		
		remove_province_modifier = smaugs_desolation
		add_province_modifier = { name = reconstruction_finished_smaugs_desolation duration = 730 }
	}
}

# Trussel-Day
province_event = {
	id = 50908
	title = "Trussell-Day"
	desc = "EVTDESC50908"
	
	trigger = {
		province_id = 652 # Dale
		owner = { is_culture_group = northmen }
	}
	
	mean_time_to_happen = {
		months = 240
		
		modifier = {
			factor = 2
			owner = { war = yes }
		}
	}
	
	option = {
		name = "Thrushes are always our friends"
		
		owner = {
			prestige = 1
			any_pop = {
				militancy = -0.5
				consciousness = -0.5
			}
		}
	}
}

# Completion of the Mere's End (Lindal) Boat Lift
country_event = {
	id = 50909
	title = "The Mere's End Boat Lift"
	desc = "EVTDESC50909"
	picture = "production"
	
	is_triggered_only = yes
	
	immediate = {
		649 = { add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 } }
		653 = { add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 } }
		654 = { add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 } }
	}
	
	option = {
		name = "Now trade can flow more easily"
		
		remove_country_modifier = meres_end_constructing_boat_lift
		set_global_flag = DAL_meres_end_boat_lift_constructed
		
		any_owned = {
			limit = {
				OR = {
					province_id = 649
					province_id = 653
					province_id = 654
				}
			}
			province_wealth_increase_1_loc = {}
		}
	}
}

# Dragon Gold
province_event = {
	id = 50910
	title = "Gold in Long Lake!"
	desc = "EVTDESC50910"
	
	trigger = {
		OR = {
			province_id = 649
			province_id = 653
			province_id = 654
		}
	}
	
	mean_time_to_happen = {
		months = 150
		
		modifier = {
			factor = 2
			year = 2960
		}
		modifier = {
			factor = 2
			year = 2970
		}
		modifier = {
			factor = 2
			year = 2980
		}
		modifier = {
			factor = 2
			year = 2990
		}
		modifier = {
			factor = 2
			year = 3000
		}
		modifier = {
			factor = 2
			year = 3010
		}
		modifier = {
			factor = 2
			year = 3020
		}
	}
	
	option = {
		name = "A mightly find indeed"
		
		owner = { treasury = 8000 }
	}
}

# Frithalf, Lord of Riding
country_event = {
	id = 50911
	title = "Frithalf, Lord of Riding"
	desc = "EVTDESC50911"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		accepted_culture = grammas
	}
	
	mean_time_to_happen = { months = 60 }
	
	option = {
		name = "A new general is always welcome"
		
		define_general = {
			name = "§LFrithalf, §MLord of Riding§!"
			background = lord_of_riding
			personality = persistent
		}
		set_global_flag = DAL_recruited_frithalf
	}
}

# Eynar, Lord of Riding
country_event = {
	id = 50912
	title = "Eynar, Lord of Riding"
	desc = "EVTDESC50911"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		accepted_culture = grammas
		year = 2970
		owns = 640 # Grasgarda
	}
	
	mean_time_to_happen = { months = 60 }
	
	option = {
		name = "A new general is always welcome"
		
		define_general = {
			name = "§LEynar, §MLord of Riding§!"
			background = lord_of_riding
			personality = ballsy
		}
		set_global_flag = DAL_recruited_eynar
	}
}

# Oyvind, Captain of Erland's Ferry
country_event = {
	id = 50913
	title = "Oyvind, Master of Erland's Ferry"
	desc = "EVTDESC50913"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		accepted_culture = grammas
		year = 2990
		owns = 446 # Erland's Ferry
	}
	
	mean_time_to_happen = { months = 60 }
	
	option = {
		name = "A new general is always welcome"
		
		define_general = {
			name = "§LOyvind, §MCaptain of Erland's Ferry§!"
			background = captain_of_erlands_ferry
			personality = resolute
		}
		
		set_global_flag = DAL_recruited_oyvind
	}
}

# Lodin, Captain of Royal Archers
country_event = {
	id = 50914
	title = "Lodin, Captain of the Royal Archers"
	desc = "EVTDESC50914"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		owns = 652 # Dale
		year = 3005
	}
	
	mean_time_to_happen = { months = 60 }
	
	option = {
		name = "A new general is always welcome"
		
		define_general = {
			name = "§LLodin, §MCaptain of the Royal Archers§!"
			background = captain_of_royal_archers
			personality = aggressive
		}
		set_global_flag = DAL_recruited_lodin
	}
}

# Alerting for Celduin Pirates
country_event = {
	id = 50915
	title = "Activation of Celduin Pirates"
	desc = "EVTDESC50915"
	picture = "gramavuld/celduin_river"
	
	is_triggered_only = yes
	
	option = {
		name = "Understood"
	}
}

# Celduin Pirate Raid
province_event = {
	id = 50916
	title = "Pirate Raid"
	desc = "EVTDESC50916"
	
	trigger = {
		has_province_modifier = celduin_pirates
		owner = { money = 5000 }
	}
	
	mean_time_to_happen = {
		months = 75
		
		modifier = {
			factor = 0.25
			owner = { war = yes }
		}
	}
	
	immediate = {
		random = {
			chance = 10
			add_province_modifier = { name = province_wealth_decrease_1_target_modifier duration = -1 }
		}
	}
	
	option = {
		name = "We ought to do something"
		
		any_pop = {
			limit = {
				strata = poor
			}
			reduce_pop = 0.999
		}
		any_pop = {
			militancy = 4
			consciousness = 2
		}
		owner = {
			treasury = -5000
			
			random_country = {
				limit = { has_country_modifier = funding_celduin_pirates }
				country_event = 50917
				relation = { who = THIS value = -50 }
			}
		}
		
		random = {
			chance = 10 # Make sure this percentage matches the immediate
			province_wealth_decrease_1_loc = {}
		}
	}
}

# Celduin Pirate Raid, Raid Support
country_event = {
	id = 50917
	title = "Successful raid in $FROMPROVINCE$"
	desc = "EVTDESC50917"
	picture = "gramavuld/celduin_river"
	
	is_triggered_only = yes
	
	option = {
		name = "A toast to the victors!"
		
		treasury = 2500
	}
}

# Rivermen Join Dale (prior to Bard's Ultimatum)
country_event = {
	id = 50918
	title = "$FROMCOUNTRY$ Petitions to Join the $COUNTRY$"
	desc = "EVTDESC50918"
	picture = "gramavuld/bard_war"
	
	is_triggered_only = yes
	
	option = {
		name = "They finally see reason"
		
		prestige = 5
		
		FROM = {
			all_core = {
				add_core = THIS
				remove_core = DA1
				remove_core = DA2
				remove_core = DA3
				remove_core = DA4
			}
		}
		
		inherit = FROM
		
		random_owned = {
			limit = {
				owner = { NOT = { accepted_culture = rivermen } }
			}
			owner = { add_accepted_culture = rivermen }
		}
		
		plurality = -1
	}
}

# Rivermen are attempting to break Dale's Hegemony
country_event = {
	id = 50919
	title = "War with $FROMCOUNTRY$!"
	desc = "EVTDESC50919"
	picture = "gramavuld/bard_war"
	
	is_triggered_only = yes
	
	option = {
		name = "This war will decide the fate of Gramavuld"
	}
}

# RIV-DAL Hegemony War Results {
# DAL victory
country_event = {
	id = 50920
	title = "The Results of the War"
	desc = "EVTDESC50920"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		has_global_flag = RIV_break_DAL_hegemony
		war = no
		NOT = { vassal_of = RIV }
	}
	
	option = {
		name = "The consequences have arrived"
		
		set_global_flag = invited_the_rivermen # In case Bard I is still the leader, DAL will be able to complete his expansion flavor
		clr_global_flag = RIV_break_DAL_hegemony
		
		RIV = { all_core = { add_core = THIS } }
		inherit = RIV
	}
}

# RIV victory
country_event = {
	id = 50921
	title = "The Results of the War"
	desc = "EVTDESC50921"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	trigger = {
		tag = RIV
		has_global_flag = RIV_break_DAL_hegemony
		war = no
		DAL = { vassal_of = THIS }
	}
	
	option = {
		name = "As it is meant to be"
		
		DAL = {
			release = GRA
			remove_country_modifier = king_of_grammas
			remove_accepted_culture = grammas
			
			release = ADH
			remove_country_modifier = king_of_adhalling
			remove_accepted_culture = adhalling
		}
		
		any_country = {
			limit = {
				OR = {
					tag = GRA
					tag = ADH
				}
			}
			country_event = 2509
			country_event = 2510
			
			all_core = { remove_core = DAL }
		}
		
		all_core = {
			remove_core = DAL
			remove_core = GRA
			remove_core = ADH
		}
	}
}
# }

# Marsh-wight Attack
province_event = {
	id = 50922
	title = "Marsh-wight Attack"
	desc = "EVTDESC50922"
	
	trigger = {
		has_province_modifier = marsh_wights
		NOT = { owner = { tag = LMW } }
	}
	
	mean_time_to_happen = { months = 12 }
	
	immediate = {
		random = {
			chance = 50
			add_province_modifier = { name = province_wealth_decrease_1_target_modifier duration = -1 }
		}
	}
	
	option = {
		name = "That is unacceptable!"
		
		any_pop = {
			limit = {
				has_pop_religion = undead
			}
			reduce_pop = 0.99
			militancy = 5
			consciousness = 5
		}
		
		any_pop = {
			limit = {
				NOT = { has_pop_religion = undead }
			}
			reduce_pop = 0.95
			militancy = 2
			consciousness = 2
		}
		
		random = {
			chance = 50 # Make sure this percentage matches the immediate
			province_wealth_decrease_1_loc = {}
		}
	}
	
	option = {
		name = "We should start hunting them"
		
		any_pop = {
			limit = {
				has_pop_religion = undead
			}
			reduce_pop = 0.99
			militancy = 5
			consciousness = 5
		}
		
		any_pop = {
			limit = {
				NOT = { has_pop_religion = undead }
			}
			reduce_pop = 0.95
			militancy = 2
			consciousness = 2
		}
		
		owner = { treasury = -100000 }
		
		add_province_modifier = { name = hunting_marsh_wights duration = -1 }
		remove_province_modifier = marsh_wights
		
		random = {
			chance = 50 # Make sure this percentage matches the immediate
			province_wealth_decrease_1_loc = {}
		}
		
		ai_chance = {
			factor = 1
			
			modifier = {
				factor = 0
				NOT = { owner = { money = 100000 } }
			}
		}
	}
}

# Marsh-wight Attack
province_event = {
	id = 50923
	title = "Marsh-wight Attack"
	desc = "EVTDESC50923"
	
	trigger = {
		has_province_modifier = hunting_marsh_wights
		NOT = { owner = { tag = LMW } }
	}
	
	mean_time_to_happen = { months = 12 }
	
	immediate = {
		random = {
			chance = 50
			add_province_modifier = { name = province_wealth_decrease_1_target_modifier duration = -1 }
		}
	}
	
	option = {
		name = "That is unacceptable!"
		
		any_pop = {
			limit = {
				has_pop_religion = undead
			}
			reduce_pop = 0.90
			militancy = 5
			consciousness = 5
		}
		
		any_pop = {
			limit = {
				NOT = { has_pop_religion = undead }
				NOT = { type = soldiers }
			}
			reduce_pop = 0.98
			militancy = 2
			consciousness = 2
		}
		
		any_pop = {
			limit = {
				NOT = { has_pop_religion = undead }
				type = soldiers
			}
			reduce_pop = 0.95
			militancy = 2
			consciousness = 2
		}
		
		random = {
			chance = 50 # Make sure this percentage matches the immediate
			province_wealth_decrease_1_loc = {}
		}
	}
}

# The Wight Infestation
country_event = {
	id = 50924
	title = "The Wights Rise"
	desc = "EVTDESC50924"
	picture = "gramavuld/wight_rising"
	
	fire_only_once = yes
	
	trigger = {
		NOT = { has_global_flag = DAL_marsh_wights_risen }
		LMW = {
			any_core = {
				owned_by = THIS
				OR = {
					has_province_modifier = marsh_wights
					has_province_modifier = hunting_marsh_wights
				}
				OR = {
					pop_majority_culture = wight
					AND = {
						has_pop_culture = wight
						militancy = 9
					}
				}
			}
		}
	}
	
	mean_time_to_happen = { months = 6 }
	
	option = {
		name = "The day has come"
		
		release = LMW
		
		casus_belli = {
			target = LMW
			type = conquest_tiny
			months = 12
		}
		
		war = {
			target = LMW
			attacker_goal = { casus_belli = conquest_tiny }
			defender_goal = { casus_belli = status_quo }
			call_ally = yes
		}
		
		LMW = {
			any_pop = {
				limit = {
					has_pop_religion = undead
				}
				reduce_pop = 2
				militancy = -10
				consciousness = -10
				pop_type = soldiers
			}
			
			any_pop = {
				limit = {
					NOT = { has_pop_religion = undead }
				}
				reduce_pop = 0.50
				militancy = 10
				consciousness = 10
			}
			
			any_pop = {
				limit = {
					NOT = { has_pop_religion = undead }
					pop_type = soldiers
				}
				pop_type = labourers
			}
			
			capital_scope = {
				sub_unit = { type = archers value = current }
				sub_unit = { type = archers value = current }
				sub_unit = { type = archers value = current }
				sub_unit = { type = archers value = current }
				sub_unit = { type = pikemen value = current }
				sub_unit = { type = pikemen value = current }
				sub_unit = { type = pikemen value = current }
				sub_unit = { type = pikemen value = current }
				sub_unit = { type = scouts value = current }
				sub_unit = { type = artillery value = current }
			}
		}
		set_global_flag = DAL_marsh_wights_risen
	}
}

# Esgaroth Trade Mechanic {
# Open Trade with the Barding Realm?
country_event = {
	id = 50925
	title = "Trade With the $FROMCOUNTRY$?"
	desc = "EVTDESC50925"
	picture = "gramavuld/market"
	
	is_triggered_only = yes
	
	option = {
		name = "An offer graciously accepted"
		
		add_country_modifier = { name = trading_with_DAL duration = -1 }
		FROM = { country_event = 50926 }
		
		ai_chance = {
			factor = 80
			
			modifier = {
				factor = 0
				OR = {
					NOT = { relation = { who = FROM value = 0 } }
					AND = {
						has_global_flag = railroading_enabled
						OR = {
							tag = DA2
							tag = DA3
							tag = DA4
						}
					}
				}
			}
		}
	}
	
	option = {
		name = "An offer graciously rejected"
		
		set_country_flag = rejected_trade_with_DAL
		FROM = { country_event = 50927 }
		
		ai_chance = {
			factor = 20
			
			modifier = {
				factor = 0
				OR = {
					in_sphere = FROM
					AND = {
						has_global_flag = railroading_enabled
						tag = DA1
					}
				}
			}
		}
	}
}

# Accepted
country_event = {
	id = 50926
	title = "Trade with the $FROMCOUNTRY$ Accepted"
	desc = "EVTDESC50926"
	picture = "gramavuld/market"
	
	is_triggered_only = yes
	allow_multiple_instances = yes
	
	option = {
		name = "Good"
		
		prestige = 5
	}
}

# Rejected
country_event = {
	id = 50927
	title = "Trade with the $FROMCOUNTRY$ Rejected"
	desc = "EVTDESC50927"
	picture = "gramavuld/market"
	
	is_triggered_only = yes
	allow_multiple_instances = yes
	
	option = {
		name = "No"
		
		prestige = -5
	}
}

# Esgaroth Trade Level Update
province_event = {
	id = 50928
	title = "A Change in Trade"
	desc = "EVTDESC50928"
	
	is_triggered_only = yes
	
	option = {
		name = "OK"
		
		# Not trading with anyone
		owner = {
			random_country = {
				limit = {
					tag = FOR
					NOT = { check_variable = { which = esgaroth_trading value = 0.1 } }
				}
				654 = { # Esgaroth
					remove_province_modifier = esgaroth_trade_i
					remove_province_modifier = esgaroth_trade_ii
					remove_province_modifier = esgaroth_trade_iii
					remove_province_modifier = esgaroth_trade_iv
					remove_province_modifier = esgaroth_trade_v
				}
			}
		}
		
		# Trading with one realm
		owner = {
			random_country = {
				limit = {
					tag = FOR
					check_variable = { which = esgaroth_trading value = 0.9 }
					NOT = { check_variable = { which = esgaroth_trading value = 1.1 } }
				}
				654 = { # Esgaroth
					add_province_modifier = { name = esgaroth_trade_i duration = -1 }
					remove_province_modifier = esgaroth_trade_ii
					remove_province_modifier = esgaroth_trade_iii
					remove_province_modifier = esgaroth_trade_iv
					remove_province_modifier = esgaroth_trade_v
				}
			}
		}
		
		# Trading with 2-3 realms
		owner = {
			random_country = {
				limit = {
					tag = FOR
					check_variable = { which = esgaroth_trading value = 1.9 }
					NOT = { check_variable = { which = esgaroth_trading value = 3.1 } }
				}
				654 = { # Esgaroth
					remove_province_modifier = esgaroth_trade_i
					add_province_modifier = { name = esgaroth_trade_ii duration = -1 }
					remove_province_modifier = esgaroth_trade_iii
					remove_province_modifier = esgaroth_trade_iv
					remove_province_modifier = esgaroth_trade_v
				}
			}
		}
		# Trading with 4-5 realms
		owner = {
			random_country = {
				limit = {
					tag = FOR
					check_variable = { which = esgaroth_trading value = 3.9 }
					NOT = { check_variable = { which = esgaroth_trading value = 5.1 } }
				}
				654 = { # Esgaroth
					remove_province_modifier = esgaroth_trade_i
					remove_province_modifier = esgaroth_trade_ii
					add_province_modifier = { name = esgaroth_trade_iii duration = -1 }
					remove_province_modifier = esgaroth_trade_iv
					remove_province_modifier = esgaroth_trade_v
				}
			}
		}
		
		# Trading with 6-9 realms
		owner = {
			random_country = {
				limit = {
					tag = FOR
					check_variable = { which = esgaroth_trading value = 5.9 }
					NOT = { check_variable = { which = esgaroth_trading value = 9.1 } }
				}
				654 = { # Esgaroth
					remove_province_modifier = esgaroth_trade_i
					remove_province_modifier = esgaroth_trade_ii
					remove_province_modifier = esgaroth_trade_iii
					add_province_modifier = { name = esgaroth_trade_iv duration = -1 }
					remove_province_modifier = esgaroth_trade_v
				}
			}
		}
		
		# Trading with 10+ realms
		owner = {
			random_country = {
				limit = {
					tag = FOR
					check_variable = { which = esgaroth_trading value = 9.9 }
				}
				654 = { # Esgaroth
					remove_province_modifier = esgaroth_trade_i
					remove_province_modifier = esgaroth_trade_ii
					remove_province_modifier = esgaroth_trade_iii
					remove_province_modifier = esgaroth_trade_iv
					add_province_modifier = { name = esgaroth_trade_v duration = -1 }
				}
			}
		}
	}
}
# }

# Leader Deaths and Coronations {
# Death of Bard I
country_event = {
	id = 50929
	title = "The Death of Bard I"
	desc = "EVTDESC50929"
	picture = "generic/leader_death"
	
	fire_only_once = yes
	
	trigger = {
		nationalvalue = bard_i
		OR = {
			AND = {
				has_global_flag = railroading_enabled
				year = 2977
			}
			AND = {
				has_global_flag = railroading_disabled
				year = 2974
			}
		}
	}
	
	mean_time_to_happen = {
		months = 36
		
		modifier = {
			factor = 0.15 # Cut it down to ~6 months if railroading is enabled
			has_global_flag = railroading_enabled
		}
		
		modifier = {
			factor = 0.01 # Cut it down to essentially immediately if getting to the edge of the date range the dynamic loc event handles
			year = 2980
			month = 10
		}
	}
	
	option = {
		name = "He will be missed"
		
		# If Bain is at least 16, he becomes king
		random_owned = {
			limit = {
				owner = { FOR = { check_variable = { which = bain_i_age value = 15.9 } } }
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = bain_i_next_leader
			}
		}
		
		# If Bain is dead, and Brand is at least 16, he becomes king
		random_owned = {
			limit = {
				owner = {
					NOT = { FOR = { check_variable = { which = bain_i_age value = -1.9 } } }
					FOR = { check_variable = { which = brand_i_age value = 15.9 } }
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = brand_i_next_leader
		}
		
		# If Bain and Brand are dead, and Bard II is at least 16, he becomes king
		random_owned = {
			limit = {
					NOT = { FOR = { check_variable = { which = bain_i_age value = -1.9 } } }
					NOT = { FOR = { check_variable = { which = brand_i_age value = -1.9 } } }
					FOR = { check_variable = { which = bard_ii_age value = 15.9 } }
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = bard_ii_next_leader
			}
		}
		
		# If Bain, Brand or Bard II is alive, but not of age yet, the next leader will be a regency council
		random_owned = {
			limit = {
				owner = {
					NOT = { has_country_flag = knows_next_leader }
					OR = {
						AND = {
							FOR = { check_variable = { which = bain_i_age value = -0.1 } }
							NOT = { FOR = { check_variable = { which = bain_i_age value = 15.1 } } }
						}
						AND = {
							FOR = { check_variable = { which = brand_i_age value = -0.1 } }
							NOT = { FOR = { check_variable = { which = brand_i_age value = 15.1 } } }
						}
						AND = {
							FOR = { check_variable = { which = bard_ii_age value = -0.1 } }
							NOT = { FOR = { check_variable = { which = bard_ii_age value = 15.1 } } }
						}
					}
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = regency_next_leader
			}
		}
		
		# Clears leader-specific modifiers (generic and specific) and handles standard popular anxiety changes
		country_event = 3501
		
		# Bard I's death hits harder than the standard leader [due to him being a good ruler and being the start of the dynasty
		plurality = 5
		
		# Set the next leader
		random_owned = {
			limit = {
				owner = { has_country_flag = bain_i_next_leader }
			}
			owner = { country_event = 50930 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = brand_i_next_leader }
			}
			owner = { country_event = 50932 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = bard_ii_next_leader }
			}
			owner = { country_event = 50934 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = regency_next_leader }
			}
			owner = { country_event = 50945 }
		}
		
		# Clean up to make sure we don't break something with a flag being left around
		clr_country_flag = bain_i_next_leader
		clr_country_flag = brand_i_next_leader
		clr_country_flag = bard_ii_next_leader
		clr_country_flag = regency_next_leader
		
		FOR = { country_event = 33006 }
	}
}

# Coronation of Bain I
country_event = {
	id = 50930
	title = "The Coronation of Bain I"
	desc = "EVTDESC50930"
	picture = "generic/coronation"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		nationalvalue = regency
		FOR = { check_variable = { which = bain_i_age value = 15.9 } }
	}
	
	option = {
		name = "Long live the King!"
		
		prestige = 5
		nationalvalue = bain_i
		
		plurality = -3
	}
}

# Death of Bain I
country_event = {
	id = 50931
	title = "The Death of Bain I"
	desc = "EVTDESC50931"
	picture = "generic/leader_death"
	
	fire_only_once = yes
	
	trigger = {
		nationalvalue = bain_i
		OR = {
			AND = {
				has_global_flag = railroading_enabled
				year = 3007
			}
			AND = {
				has_global_flag = railroading_disabled
				year = 3004
			}
		}
	}
	
	mean_time_to_happen = {
		months = 36
		
		modifier = {
			factor = 0.15 # Cut it down to ~6 months if railroading is enabled
			has_global_flag = railroading_enabled
		}
		modifier = {
			factor = 0.01 # Cut it down to essentially immediately if getting to the edge of the date range the dynamic loc event handles
			year = 3010
			month = 10
		}
	}
	
	option = {
		name = "He will be missed"
		
		# If Brand is at least 16, he becomes king
		random_owned = {
			limit = {
				owner = { FOR = { check_variable = { which = brand_i_age value = 15.9 } } }
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = brand_i_next_leader
		}
		
		# If Brand is dead, and Bard II is at least 16, he becomes king
		random_owned = {
			limit = {
					NOT = { FOR = { check_variable = { which = brand_i_age value = -1.9 } } }
					FOR = { check_variable = { which = bard_ii_age value = 15.9 } }
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = bard_ii_next_leader
			}
		}
		
		# If Brand or Bard II is alive, but not of age yet, the next leader will be a regency council
		random_owned = {
			limit = {
				owner = {
					NOT = { has_country_flag = knows_next_leader }
					OR = {
						AND = {
							FOR = { check_variable = { which = brand_i_age value = -0.1 } }
							NOT = { FOR = { check_variable = { which = brand_i_age value = 15.1 } } }
						}
						AND = {
							FOR = { check_variable = { which = bard_ii_age value = -0.1 } }
							NOT = { FOR = { check_variable = { which = bard_ii_age value = 15.1 } } }
						}
					}
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = regency_next_leader
			}
		}
		
		# Clears leader-specific modifiers (generic and specific) and handles standard popular anxiety changes
		country_event = 3501
		
		# Set the next leader
		random_owned = {
			limit = {
				owner = { has_country_flag = brand_i_next_leader }
			}
			owner = { country_event = 50932 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = bard_ii_next_leader }
			}
			owner = { country_event = 50934 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = regency_next_leader }
			}
			owner = { country_event = 50945 }
		}
		
		# Clean up to make sure we don't break something with a flag being left around
		clr_country_flag = brand_i_next_leader
		clr_country_flag = bard_ii_next_leader
		clr_country_flag = regency_next_leader
		
		FOR = { country_event = 33007 }
	}
}

# Coronation of Brand I
country_event = {
	id = 50932
	title = "The Coronation of Brand I"
	desc = "EVTDESC50932"
	picture = "generic/coronation"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		nationalvalue = regency
		FOR = { check_variable = { which = brand_i_age value = 15.9 } }
	}
	
	option = {
		name = "Long live the King!"
		
		prestige = 5
		nationalvalue = brand_i
		
		plurality = -3
	}
}

# Death of Brand I
country_event = {
	id = 50933
	title = "The Death of Brand I"
	desc = "EVTDESC50933"
	picture = "generic/leader_death"
	
	fire_only_once = yes
	
	trigger = {
		nationalvalue = bain_i
		OR = {
			AND = {
				has_global_flag = railroading_enabled
				year = 3030
			}
			AND = {
				has_global_flag = railroading_disabled
				year = 3027
			}
			AND = {
				has_global_flag = railroading_enabled
				has_global_flag = wotr_started
				NOT = { controls = 652 } # Dale
			}
		}
	}
	
	mean_time_to_happen = {
		months = 36
		
		modifier = {
			factor = 0.15 # Cut it down to ~6 months if railroading is enabled
			has_global_flag = railroading_enabled
		}
		modifier = {
			factor = 0.01 # Cut it down to essentially immediately if getting to the edge of the date range the dynamic loc event handles
			OR = {
				AND = {
					year = 3033
					month = 10
				}
				AND = {
					has_global_flag = wotr_started
					NOT = { controls = 652 } # Dale
				}
			}
		}
	}
	
	option = {
		name = "He will be missed"
		
		# If Bard II is at least 16, he becomes king
		random_owned = {
			limit = {
				owner = { FOR = { check_variable = { which = bard_ii_age value = 15.9 } } }
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = bard_ii_next_leader
			}
		}
		
		# If Bard II is alive, but not of age yet, the next leader will be a regency council
		random_owned = {
			limit = {
				owner = {
					NOT = { has_country_flag = knows_next_leader }
					AND = {
						FOR = { check_variable = { which = bard_ii_age value = -0.1 } }
						NOT = { FOR = { check_variable = { which = bard_ii_age value = 15.1 } } }
					}
				}
			}
			owner = {
				set_country_flag = knows_next_leader
				set_country_flag = regency_next_leader
			}
		}
		
		# Clears leader-specific modifiers (generic and specific) and handles standard popular anxiety changes
		country_event = 3501
		
		# Set the next leader
		random_owned = {
			limit = {
				owner = { has_country_flag = bard_ii_next_leader }
			}
			owner = { country_event = 50934 }
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = regency_next_leader }
			}
			owner = { country_event = 50945 }
		}
		
		# Clean up to make sure we don't break something with a flag being left around
		clr_country_flag = bard_ii_next_leader
		clr_country_flag = regency_next_leader
		
		FOR = { country_event = 33008 }
	}
}

# Coronation of Bard II
country_event = {
	id = 50934
	title = "The Coronation of Bard II"
	desc = "EVTDESC50934"
	picture = "generic/coronation"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		nationalvalue = regency
		FOR = { check_variable = { which = bard_ii_age value = 15.9 } }
	}
	
	option = {
		name = "Long live the King!"
		
		prestige = 5
		nationalvalue = bard_ii
		
		plurality = -3
	}
}

# Death of Bard II
country_event = {
	id = 50935
	title = "The Death of Bard II"
	desc = "EVTDESC50935"
	picture = "generic/leader_death"
	
	fire_only_once = yes
	
	trigger = {
		nationalvalue = bard_ii
		OR = {
			AND = {
				has_global_flag = railroading_enabled
				year = 3059
			}
			AND = {
				has_global_flag = railroading_disabled
				year = 3056
			}
		}
	}
	
	mean_time_to_happen = {
		months = 36
		
		modifier = {
			factor = 0.15 # Cut it down to ~6 months if railroading is enabled
			has_global_flag = railroading_enabled
		}
		
		modifier = {
			factor = 0.01 # Cut it down to essentially immediately if getting to the edge of the date range the dynamic loc event handles
			year = 3062
			month = 10
		}
	}
	
	option = {
		name = "He will be missed"
		
		# Clears leader-specific modifiers (generic and specific), sets Generic Leader as leader and handles standard popular anxiety changes
		country_event = 3501
		
		FOR = { country_event = 33009 }
	}
}
# }

# Royal Weddings and Births {
# Astrid and Bain I Wed
country_event = {
	id = 50936
	title = "A Royal Wedding"
	desc = "EVTDESC50936"
	picture = "generic/wedding"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bain_i_age value = 15.9 } } # Making sure Bain is of age
		NOT = { has_global_flag = DAL_bain_i_married }
	}
	
	mean_time_to_happen = {
		months = 12
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 2955
		}
	}
	
	option = {
		name = "To the happy couple!"
		
		prestige = 3
		
		set_global_flag = DAL_bain_i_married
		
		plurality = -1
	}
}

# Brand I is born
country_event = {
	id = 50937
	title = "A Royal Birth"
	desc = "EVTDESC50937"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bain_i_age value = 15.9 } } # Making sure Bain is still alive
		has_global_flag = DAL_bain_i_married
	}
	
	mean_time_to_happen = {
		months = 24
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 2957
		}
	}
	
	option = {
		name = "The line is secured"
		
		any_pop = {
			limit = {
				OR = {
					is_primary_culture = yes
					is_accepted_culture = yes
				}
			}
			militancy = -2
			consciousness = -4
		}
		
		prestige = 1
		
		FOR = {
			country_event = 33002 # Age Calculation Loop
			country_event = 33004 # Birth Calculation
		}
		
		plurality = -2
	}
}

# Girion Bainson is born
country_event = {
	id = 50938
	title = "A Royal Birth"
	desc = "EVTDESC50938"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bain_i_age value = 15.9 } } # Making sure Bain is still alive
		FOR = { check_variable = { which = brand_i_age value = 0.9 } } # Making sure Brand has been born
		has_global_flag = DAL_bain_i_married
		year = 2960
		NOT = { has_global_flag = DAL_girion_bainson_born }
	}
	
	mean_time_to_happen = { months = 24 }
	
	option = {
		name = "The line is secured"
		
		prestige = 1
		set_global_flag = DAL_girion_bainson_born
	}
}

# Erna and Brand I Wed
country_event = {
	id = 50939
	title = "A Royal Wedding"
	desc = "EVTDESC50939"
	picture = "generic/wedding"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = brand_i_age value = 15.9 } } # Making sure Brand is of age
		NOT = { has_global_flag = DAL_brand_i_married }
		year = 2979
	}
	
	mean_time_to_happen = {
		months = 12
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 2980
		}
	}
	
	option = {
		name = "To the happy couple!"
		
		prestige = 3
		
		set_global_flag = DAL_brand_i_married
		
		plurality = -1
	}
}

# Bard II is born
country_event = {
	id = 50940
	title = "A Royal Birth"
	desc = "EVTDESC50940"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = brand_i_age value = 15.9 } } # Making sure Brand is still alive
		has_global_flag = DAL_brand_i_married
		year = 2982
	}
	
	mean_time_to_happen = {
		months = 24
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 2985
		}
	}
	
	option = {
		name = "The line is secured"
		
		any_pop = {
			limit = {
				OR = {
					is_primary_culture = yes
					is_accepted_culture = yes
				}
			}
			militancy = -2
			consciousness = -4
		}
		
		prestige = 1
		
		plurality = -2
		
		FOR = {
			country_event = 33003 # Age Calculation Loop
			country_event = 33005 # Birth Calculation
		}
	}
}

# Bryn is born
country_event = {
	id = 50941
	title = "A Royal Birth"
	desc = "EVTDESC50941"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = brand_i_age value = 15.9 } } # Making sure Brand is still alive
		FOR = { check_variable = { which = bard_ii_age value = 0.9 } } # Making sure Bard II has been born
		has_global_flag = DAL_brand_i_married
		year = 2985
		NOT = { has_global_flag = DAL_bryn_brandson_born }
	}
	
	mean_time_to_happen = { months = 24 }
	
	option = {
		name = "The line is secured"
		
		prestige = 1
		set_global_flag = DAL_bryn_brandson_born
	}
}

# Esgreld and Bard II Wed
country_event = {
	id = 50942
	title = "A Royal Wedding"
	desc = "EVTDESC50942"
	picture = "generic/wedding"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bard_ii_age value = 15.9 } } # Making sure Bard II is of age
		NOT = { has_global_flag = DAL_bard_ii_married }
		year = 3010
	}
	
	mean_time_to_happen = {
		months = 12
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 3011
		}
	}
	
	option = {
		name = "To the happy couple!"
		
		prestige = 3
		
		set_global_flag = DAL_bard_ii_married
		
		plurality = -1
	}
}

# Girion II is born
country_event = {
	id = 50943
	title = "A Royal Birth"
	desc = "EVTDESC50943"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bard_ii_age value = 15.9 } } # Making sure Bard is still alive
		has_global_flag = DAL_bard_ii_married
		year = 3020
		NOT = { has_global_flag = DAL_girion_ii_born }
	}
	
	mean_time_to_happen = {
		months = 24
		
		modifier = {
			factor = 0.01
			has_global_flag = railroading_enabled
			year = 3022
		}
	}
	
	option = {
		name = "The line is secured"
		
		any_pop = {
			limit = {
				OR = {
					is_primary_culture = yes
					is_accepted_culture = yes
				}
			}
			militancy = -2
			consciousness = -4
		}
		
		prestige = 1
		set_global_flag = DAL_girion_ii_born
		
		plurality = -2
	}
}

# Girloth is born
country_event = {
	id = 50944
	title = "A Royal Birth"
	desc = "EVTDESC50944"
	picture = "generic/birth"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		FOR = { check_variable = { which = bard_ii_age value = 15.9 } } # Making sure Bard is still alive
		has_global_flag = DAL_bard_ii_married
		has_global_flag = DAL_girion_ii_born
		year = 3025
		NOT = { has_global_flag = DAL_girloth_bard2son_born }
	}
	
	mean_time_to_happen = { months = 24 }
	
	option = {
		name = "The line is secured"
		
		prestige = 1
		set_global_flag = DAL_girloth_bard2son_born
	}
}
# }

# Regency
country_event = {
	id = 50945
	title = "Regency!"
	desc = "EVTDESC50945"
	picture = "generic/coronation"
	
	is_triggered_only = yes
	
	option = {
		name = "At least we have an heir"
		
		prestige = -5
		nationalvalue = regency
		
		plurality = -2
	}
}

# Bryn, Royal Warrior
country_event = {
	id = 50946
	title = "Bryn, Royal Warrior"
	desc = "EVTDESC50946"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	mean_time_to_happen = { months = 6 }
	
	trigger = {
		has_country_flag = DAL_content
		year = 3005
		has_global_flag = DAL_bryn_brandson_born
	}
	
	option = {
		name = "A new general is always welcome"
		
		set_country_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = { has_country_flag = hidden_effects }
			}
			owner = { primary_culture = bryn_culture }
		}
		
		define_general = {
			name = "§LBryn, §MRoyal Warrior§!"
			background = captain_of_royal_archers
			personality = heroic
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = hidden_effects }
			}
			owner = { primary_culture = barding }
		}
		
		clr_country_flag = hidden_effects
		set_global_flag = DAL_recruited_bryn
	}
}

# Girloth, Royal General
country_event = {
	id = 50947
	title = "Girloth, Royal General"
	desc = "EVTDESC50947"
	picture = "gramavuld/bard_war"
	
	fire_only_once = yes
	
	mean_time_to_happen = { months = 6 }
	
	trigger = {
		has_country_flag = DAL_content
		year = 3045
		has_global_flag = DAL_girloth_bard2son_born
	}
	
	option = {
		name = "A new general is always welcome"
		
		set_country_flag = hidden_effects
		
		random_owned = {
			limit = {
				owner = { has_country_flag = hidden_effects }
			}
			owner = { primary_culture = girloth_culture }
		}
		
		define_general = {
			name = "§LGirloth, §MRoyal General§!"
			background = first_captain_of_dale
			personality = tactical
		}
		
		random_owned = {
			limit = {
				owner = { has_country_flag = hidden_effects }
			}
			owner = { primary_culture = barding }
		}
		
		clr_country_flag = hidden_effects
		set_global_flag = DAL_recruited_girloth
	}
}

# The Fate of the Longbeards
country_event = {
	id = 50948
	title = "The Fate of the Longbeards"
	desc = "EVTDESC50948"
	picture = "erebor/erebor_mountain"
	
	fire_only_once = yes
	
	trigger = {
		has_country_flag = DAL_content
		owns = 660 # Erebor
	}
	
	option = {
		name = "Erebor will have Dwarven masters once more"
		
		remove_accepted_culture = longbeard
		
		ERE_657 = { remove_core = ERE }
		ERE_660 = { remove_core = ERE }
		
		660 = { # Erebor
			add_core = EDA
			remove_core = THIS
		}
		release = EDA
		
		EDA = {
			country_event = 2509
			country_event = 2510
			primary_culture = longbeard
			add_accepted_culture = dwarven_culture
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						primary_culture = barding
						accepted_culture = barding
					}
				}
			}
			owner = { EDA = { add_accepted_culture = barding } }
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						primary_culture = grammas
						accepted_culture = grammas
					}
				}
			}
			owner = { EDA = { add_accepted_culture = grammas } }
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						primary_culture = adhalling
						accepted_culture = adhalling
					}
				}
			}
			owner = { EDA = { add_accepted_culture = adhalling } }
		}
		
		any_owned = {
			limit = {
				is_core = THIS
			}
			any_pop = {
				limit = {
					has_pop_religion = dwarven
				}
				move_pop = 660 # Erebor
			}
		}
		
		660 = {
			any_pop = {
				limit = {
					NOT = { has_pop_religion = dwarven }
				}
				move_pop = 654 # Dale
			}
		}
	}
	
	option = {
		name = "Erebor is ours"
		
		prestige = 15
		badboy = 2
		remove_accepted_culture = longbeard
		
		660 = { add_province_modifier = { name = colonial_attraction duration = 3650 } }
		
		set_global_flag = DAL_kept_erebor
	}
}

# A Shift in the Balance of Power of the Merchants and Fishers Guild
country_event = {
	id = 50949
	title = "A Shift in the Balance of Power"
	desc = "EVTDESC50949"
	picture = "gramavuld/market"
	
	is_triggered_only = yes
	
	option = {
		name = "The power shifts"
		
		remove_country_modifier = DAL_merchant_power_10
		remove_country_modifier = DAL_merchant_power_9
		remove_country_modifier = DAL_merchant_power_8
		remove_country_modifier = DAL_merchant_power_7
		remove_country_modifier = DAL_merchant_power_6
		remove_country_modifier = DAL_merchant_power_5
		remove_country_modifier = DAL_merchant_power_4
		remove_country_modifier = DAL_merchant_power_3
		remove_country_modifier = DAL_merchant_power_2
		remove_country_modifier = DAL_merchant_power_1
		remove_country_modifier = DAL_merchant_guild_balanced
		remove_country_modifier = DAL_guild_power_1
		remove_country_modifier = DAL_guild_power_2
		remove_country_modifier = DAL_guild_power_3
		remove_country_modifier = DAL_guild_power_4
		remove_country_modifier = DAL_guild_power_5
		remove_country_modifier = DAL_guild_power_6
		remove_country_modifier = DAL_guild_power_7
		remove_country_modifier = DAL_guild_power_8
		remove_country_modifier = DAL_guild_power_9
		remove_country_modifier = DAL_guild_power_10
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						has_country_flag = DAL_merchant_supported_by_realm
						NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -9.9 } }
					}
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_10 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -9.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -8.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_9 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -8.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -7.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_8 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -7.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -6.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_7 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -6.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -5.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_6 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -5.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -4.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_5 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -4.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -3.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_4 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -3.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -2.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_3 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -2.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -1.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_2 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -1.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = -0.9 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_power_1 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = -0.1 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 0.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_merchant_guild_balanced duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 0.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 1.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_1 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 1.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 2.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_2 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 2.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 3.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_3 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 3.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 4.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_4 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 4.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 5.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_5 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 5.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 6.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_6 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 6.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 7.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_7 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 7.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 8.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_8 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					check_variable = { which = DAL_merchants_fishers_bop value = 8.9 }
					NOT = { check_variable = { which = DAL_merchants_fishers_bop value = 9.1 } }
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_9 duration = -1 } }
		}
		
		random_owned = {
			limit = {
				owner = {
					OR = {
						check_variable = { which = DAL_merchants_fishers_bop value = 9.9 }
						has_country_flag = DAL_guild_supported_by_realm
					}
				}
			}
			owner = { add_country_modifier = { name = DAL_guild_power_10 duration = -1 } }
		}
	}
}

# Merchants-Fisher Guild Tensions Flare Up
province_event = {
	id = 50950
	title = "The Rights of the Fisher's Guild"
	desc = "EVTDESC50950"
	
	trigger = {
		OR = {
			province_id = 140 # Holmgeirstadur
			province_id = 648 # Londaroth
			province_id = 649 # Elliborg
			province_id = 653 # Hafborg
			province_id = 654 # Esgaroth
		}
		owner = {
			NOT = { has_country_flag = DAL_merchant_supported_by_realm }
			NOT = { has_country_flag = DAL_guild_supported_by_realm }
			OR = {
				has_country_modifier = DAL_merchant_power_10
				has_country_modifier = DAL_merchant_power_9
				has_country_modifier = DAL_merchant_power_8
				has_country_modifier = DAL_merchant_power_7
				has_country_modifier = DAL_merchant_power_6
				has_country_modifier = DAL_merchant_power_5
				has_country_modifier = DAL_merchant_power_4
				has_country_modifier = DAL_merchant_power_3
				has_country_modifier = DAL_merchant_power_2
				has_country_modifier = DAL_merchant_power_1
				has_country_modifier = DAL_merchant_guild_balanced
				has_country_modifier = DAL_guild_power_1
				has_country_modifier = DAL_guild_power_2
				has_country_modifier = DAL_guild_power_3
				has_country_modifier = DAL_guild_power_4
				has_country_modifier = DAL_guild_power_5
				has_country_modifier = DAL_guild_power_6
				has_country_modifier = DAL_guild_power_7
				has_country_modifier = DAL_guild_power_8
				has_country_modifier = DAL_guild_power_9
				has_country_modifier = DAL_guild_power_10
			}
		}
	}
	
	mean_time_to_happen = { months = 60 }
	
	option = {
		name = "Agree with the Merchants"
		
		owner = {
			change_variable = { which = DAL_merchants_fishers_bop value = -1 } # Shift 1 in favor of the Merchants
			DAL_merchant_guild_bop_shift_merchants_1_loc = {}
		}
		
		ai_chance = {
			factor = 50
		}
	}
	
	option = {
		name = "Agree with the Fisher's Guild"
		
		owner = {
			change_variable = { which = DAL_merchants_fishers_bop value = 1 } # Shift 1 in favor of the Fisher's Guild
			DAL_merchant_guild_bop_shift_guild_1_loc = {}
		}
		
		ai_chance = {
			factor = 50
		}
	}
	
	option = {
		name = "Take no sides"
		
		owner = {
			random_list = {
				1 = {
					change_variable = { which = DAL_merchants_fishers_bop value = -1 } # Shift 1 in favor of the Merchants
					DAL_merchant_guild_bop_shift_merchants_1_loc = {}
				}
				1 = {
					change_variable = { which = DAL_merchants_fishers_bop value = 1 } # Shift 1 in favor of the Fisher's Guild
					DAL_merchant_guild_bop_shift_guild_1_loc = {}
					}
			}
			plurality = 1
		}
	}
}

# An Influx of Tribesmen
province_event = {
	id = 50951
	title = "An Influx of Tribesmen"
	desc = "EVTDESC50951"
	
	trigger = {
		owner = { tag = AMO }
		has_province_modifier = AMO_easterling_war_camp
	}
	
	mean_time_to_happen = {
		months = 11
	}
	
	option = {
		name = "A new group of migrants"
		
		any_pop = {
			limit = { has_pop_culture = logath }
			reduce_pop = 1.2
		}
	}
}

# Support from $FROMCOUNTRY$
country_event = {
	id = 50952
	title = "Support from the $FROMCOUNTRY$"
	desc = "EVTDESC50952"
	picture = "rhun/easterlings_marching"
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = hidden_effects
		
		random_owned = {
			limit = {
				has_province_modifier = AMO_easterling_war_camp
				owner = { has_global_flag = hidden_effects }
			}
			add_province_modifier = { name = province_target_generic duration = 1 }
		}
		
		clr_global_flag = hidden_effects
	}
	
	option = {
		name = "We will remember their support"
		
		treasury = 50000
		
		set_global_flag = hidden_effects
		
		# To prevent pops merging incorrectly
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				owner = { has_global_flag = hidden_effects }
			}
			any_pop = {
				limit = {
					pop_type = soldiers
					NOT = { has_pop_culture = logath }
				}
				pop_type = bankers
			}
		}
		
		# One for each potential province that it could be
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				province_id = 638 # Northwatch
			}
			owner = {
				1067 = {
					random_pop = {
						limit = {
							# has_pop_culture functions differently in random_pop when compared to any_pop
							is_culture_group = THIS
							pop_type = soldiers
						}
						move_pop = 638
					}
				}
			}
		}
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				province_id = 639 # Lar Huil
			}
			owner = {
				1067 = {
					random_pop = {
						limit = {
							# has_pop_culture functions differently in random_pop when compared to any_pop
							is_culture_group = THIS
							pop_type = soldiers
						}
						move_pop = 639
					}
				}
			}
		}
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				province_id = 642 # Burh Austris
			}
			owner = {
				1067 = {
					random_pop = {
						limit = {
							# has_pop_culture functions differently in random_pop when compared to any_pop
							is_culture_group = THIS
							pop_type = soldiers
						}
						move_pop = 642
					}
				}
			}
		}
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				province_id = 1475 # Ironhold
			}
			owner = {
				1067 = {
					random_pop = {
						limit = {
							# has_pop_culture functions differently in random_pop when compared to any_pop
							is_culture_group = THIS
							pop_type = soldiers
						}
						move_pop = 1475
					}
				}
			}
		}
		
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				owner = { has_global_flag = hidden_effects }
			}
			any_pop = {
				limit = { pop_type = bankers }
				pop_type = soldiers
			}
		}
		
		random_owned = {
			limit = {
				has_province_modifier = province_target_generic
				owner = { has_global_flag = hidden_effects }
			}
			remove_province_modifier = province_target_generic
		}
		
		clr_global_flag = hidden_effects
	}
}

# The Occupation of Burh Austris
province_event = {
	id = 50953
	title = "The Occupation of Burh Austris"
	desc = "EVTDESC50953"
	
	is_triggered_only = yes
	
	option = {
		name = "A grave message"
		
		owner = {
			plurality = 0.5
			any_pop = {
				limit = {
					OR = {
						is_primary_culture = yes
						is_accepted_culture = yes
					}
				}
				consciousness = 1
			}
		}
	}
}

# Amov Raid!
province_event = {
	id = 50954
	title = "Amov Raid"
	desc = "EVTDESC50954"
	
	trigger = {
		has_province_modifier = AMO_easterling_raiders
	}
	
	mean_time_to_happen = {
		months = 24
	}
	
	immediate = {
		add_province_modifier = { name = province_target_generic duration = 1 }
		NOT = { owner = { tag = AMO } }
	}
	
	option = {
		name = "Damn those curs!"
		
		owner = { set_global_flag = hidden_effects }
		
		random_owned = {
			limit = {
				owner = { has_global_flag = hidden_effects }
				has_province_modifier = province_target_generic
			}
			add_province_modifier = { name = province_wealth_decrease_1_target_modifier duration = -1 }
			remove_province_modifier = province_target_generic
		}
		
		any_pop = {
			limit = { pop_type = soldiers }
			reduce_pop = 0.95
		}
		
		any_pop = {
			limit = { NOT = { pop_type = soldiers } }
			reduce_pop = 0.98
		}
		
		AMO = {
			set_global_flag = finding_target # To make sure that only one province event call shows up in the interface
			
			# First attempt to give to any province that doesn't have max wealth
			random_owned = {
				limit = { NOT = { has_crime = province_wealth_5 } }
				province_event = { id = 50955 days = 0 }
				owner = { clr_global_flag = finding_target }
			}
			
			# If all owned provinces have max wealth, than just throw it to the capital
			random_owned = {
				limit = { owner = { has_global_flag = finding_target } }
				owner = { capital_scope = { province_event = { id = 50955 days = 0 } } }
			}
			
			clr_global_flag = finding_target
		}
		
		province_wealth_decrease_1_loc = {}
		
		owner = { clr_global_flag = hidden_effects }
	}
}

# Raid Loot
province_event = {
	id = 50955
	title = "Raid Loot"
	desc = "EVTDESC50955"
	
	is_triggered_only = yes
	
	immediate = {
		add_province_modifier = { name = province_target_generic duration = 1 }
	}
	
	option = {
		name = "Enrich the clan"
		
		# TODO: Rework effects with unciv [reform] rework
		owner = {
			random_owned = {
				limit = {
					owner = {
						expansion = old_expansion
						training = old_training
						military_constructions = old_constructions
						tactics = old_tactics
					}
				}
				owner = { treasury = 50000 }
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
						}
					}
				}
				owner = {
					treasury = 50000
					years_of_research = 0.125
				}
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
						}
					}
				}
				owner = {
					treasury = 50000
					years_of_research = 0.25
				}
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
						}
					}
				}
				owner = {
					treasury = 50000
					years_of_research = 0.375
				}
			}
			random_owned = {
				limit = {
					owner = {
						expansion = new_expansion
						training = new_training
						military_constructions = new_constructions
						tactics = new_tactics
					}
				}
				owner = {
					treasury = 50000
					years_of_research = 0.5
				}
			}
		}
		
		owner = { set_global_flag = hidden_effects }
		
		random_owned = {
			limit = {
				owner = { has_global_flag = hidden_effects }
				has_province_modifier = province_target_generic
			}
			remove_province_modifier = province_target_generic
		}
		
		owner = { clr_global_flag = hidden_effects }
	}
	
	option = {
		name = "Invest in our territory"
		
		owner = { set_global_flag = hidden_effects }
		
		# TODO: Rework effects with unciv [reform] rework
		owner = {
			random_owned = {
				limit = {
					owner = {
						expansion = old_expansion
						training = old_training
						military_constructions = old_constructions
						tactics = old_tactics
					}
				}
				random_owned = {
					limit = {
						owner = { has_global_flag = hidden_effects }
						has_province_modifier = province_target_generic
					}
					add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 }
					remove_province_modifier = province_target_generic
				}
				
				province_wealth_increase_1_loc = {}
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
						}
					}
				}
				random_owned = {
					limit = {
						owner = { has_global_flag = hidden_effects }
						has_province_modifier = province_target_generic
					}
					add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 }
					remove_province_modifier = province_target_generic
				}
				
				owner = { treasury = 15000 }
				province_wealth_increase_1_loc = {}
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = old_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
						}
					}
				}
				random_owned = {
					limit = {
						owner = { has_global_flag = hidden_effects }
						has_province_modifier = province_target_generic
					}
					add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 }
					remove_province_modifier = province_target_generic
				}
				
				owner = { treasury = 30000 }
				province_wealth_increase_1_loc = {}
			}
			random_owned = {
				limit = {
					owner = {
						OR = {
							AND = {
								expansion = old_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = old_training
								military_constructions = new_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = old_constructions
								tactics = new_tactics
							}
							AND = {
								expansion = new_expansion
								training = new_training
								military_constructions = new_constructions
								tactics = old_tactics
							}
						}
					}
				}
				random_owned = {
					limit = {
						owner = { has_global_flag = hidden_effects }
						has_province_modifier = province_target_generic
					}
					add_province_modifier = { name = province_wealth_increase_1_target_modifier duration = -1 }
					remove_province_modifier = province_target_generic
				}
				
				owner = { treasury = 50000 }
				province_wealth_increase_1_loc = {}
			}
			random_owned = {
				limit = {
					owner = {
						expansion = new_expansion
						training = new_training
						military_constructions = new_constructions
						tactics = new_tactics
					}
				}
				random_owned = {
					limit = {
						owner = { has_global_flag = hidden_effects }
						has_province_modifier = province_target_generic
					}
					add_province_modifier = { name = province_wealth_increase_2_target_modifier duration = -1 }
					remove_province_modifier = province_target_generic
				}
				
				owner = { treasury = 50000 }
				province_wealth_increase_2_loc = {}
			}
		}
		
		owner = { set_global_flag = hidden_effects }
		
		random_owned = {
			limit = {
				owner = { has_global_flag = hidden_effects }
				has_province_modifier = province_target_generic
			}
			remove_province_modifier = province_target_generic
		}
		
		owner = { clr_global_flag = hidden_effects }
	}
}